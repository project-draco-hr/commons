{
  Listener listener=createMock(Listener.class);
  Capture<Optional<Entry>> retained=new Capture<Optional<Entry>>();
  Capture<Iterable<? extends Entry>> skipped=new Capture<Iterable<? extends Entry>>();
  listener.onSkip(capture(retained),capture(skipped));
  replay(listener);
  File one=newFile("one");
  File two=newFile("two");
  File three=newFile("three");
  jarBuilder(newFile(),listener).addFile(one,"skipped/write").addFile(two,"skipped/write").addFile(three,"skipped/write").write(false,DuplicateHandler.always(DuplicateAction.SKIP));
  assertEquals("one",retained.getValue().get().getName());
  assertEquals("skipped/write",retained.getValue().get().getJarPath());
  assertEquals(ImmutableList.of("two","three"),FluentIterable.from(skipped.getValue()).transform(GET_NAME).toList());
}
