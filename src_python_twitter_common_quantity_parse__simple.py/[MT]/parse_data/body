def parse_data(datastring):
    '\n    Parse a data string of the format:\n      [integer][unit]\n    where unit is in upper/lowercase k, kb, m, mb, g, gb, t, tb\n  '
    datastring = datastring.strip().lower()
    try:
        return Amount(int(datastring), Data.BYTES)
    except ValueError:
        pass
    BASES = {'k': Data.KB, 'kb': Data.KB, 'm': Data.MB, 'mb': Data.MB, 'g': Data.GB, 'gb': Data.GB, 't': Data.TB, 'tb': Data.TB, }
    for base in BASES:
        if datastring.endswith(base):
            try:
                return Amount(int(datastring[:(- len(base))]), BASES[base])
            except ValueError:
                raise InvalidData(datastring)
    raise InvalidData(datastring)
