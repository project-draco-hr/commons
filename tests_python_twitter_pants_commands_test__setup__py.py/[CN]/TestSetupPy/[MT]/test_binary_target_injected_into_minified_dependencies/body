def test_binary_target_injected_into_minified_dependencies(self):
    with ParseContext.temp():
        foo = python_library(name='foo', provides=setup_py(name='foo', version='0.0.0').with_binaries(foo_binary=pants(':foo_bin')))
        foo_bin = python_binary(name='foo_bin', entry_point='foo.bin.foo', dependencies=[pants(':foo_bin_dep')])
        foo_bin_dep = python_library(name='foo_bin_dep')
    assert (SetupPy.minified_dependencies(foo) == OrderedSet([foo_bin, foo_bin_dep]))
    entry_points = dict(SetupPy.iter_entry_points(foo))
    assert (entry_points == {'foo_binary': 'foo.bin.foo', })
    with self.run_execute(foo, recursive=False) as setup_py_command:
        setup_py_command.run_one.assert_called_with(foo)
    with self.run_execute(foo, recursive=True) as setup_py_command:
        setup_py_command.run_one.assert_called_with(foo)
