def execute(self, args=()):
    entry_point = self.entry()
    with mutable_sys():
        (sys.path, sys.path_importer_cache) = self.minimum_path()
        working_set = self._env.activate()
        if ('PEX_COVERAGE' in os.environ):
            PEX.start_coverage()
        TRACER.log('PYTHONPATH contains:')
        for element in sys.path:
            TRACER.log(('  %c %s' % ((' ' if os.path.exists(element) else '*'), element)))
        TRACER.log('  * - paths that do not exist or will be imported via zipimport')
        with self.patch_pkg_resources(working_set):
            if (entry_point and ('PEX_INTERPRETER' not in os.environ)):
                self.execute_entry(entry_point, args)
            else:
                self.execute_interpreter()
