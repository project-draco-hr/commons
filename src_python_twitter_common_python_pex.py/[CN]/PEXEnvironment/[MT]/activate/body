def activate(self):
    if self._activated:
        return
    if self._pex_info.inherit_path:
        self._ws = WorkingSet(sys.path)
    all_reqs = [Requirement.parse(req) for (req, _, _) in self._pex_info.requirements]
    for req in all_reqs:
        with TRACER.timed(('Resolving %s' % req)):
            try:
                resolved = self._ws.resolve([req], env=self)
            except DistributionNotFound as e:
                TRACER.log(('Failed to resolve %s: %s' % (req, e)))
                if (not self._pex_info.ignore_errors):
                    raise
                continue
        for dist in resolved:
            with TRACER.timed(('Activated %s' % dist)):
                if os.environ.get('PEX_FORCE_LOCAL', (not self._really_zipsafe(dist))):
                    with TRACER.timed('Locally caching'):
                        new_dist = DistributionHelper.maybe_locally_cache(dist, self._pex_info.install_cache)
                        new_dist.activate()
                else:
                    self._ws.add(dist)
                    dist.activate()
    self._activated = True
