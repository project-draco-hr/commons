def __init__(self, name, sources, provides=None, dependencies=None, excludes=None, buildflags=None, is_meta=False):
    "name: The name of this module target, addressable via pants via the portion of the spec\n        following the colon\n    sources: A list of paths containing the thrift source files this module's jar is compiled from\n    provides: An optional Dependency object indicating the The ivy artifact to export\n    dependencies: An optional list of Dependency objects specifying the binary (jar) dependencies of\n        this module.\n    excludes: An optional list of dependency exclude patterns to filter all of this module's\n        transitive dependencies against.\n    buildflags: A list of additional command line arguments to pass to the underlying build system\n        for this target"

    def get_all_deps():
        all_deps = OrderedSet([Pants('3rdparty:commons-lang').resolve(), JarDependency(org='org.apache.thrift', name='libthrift', rev='${thrift.library.version}'), Pants('3rdparty:slf4j-api').resolve()])
        if dependencies:
            all_deps.update(dependencies)
        return all_deps
    ExportableJavaLibrary.__init__(self, JavaThriftLibrary._SRC_DIR, name, sources, provides, get_all_deps(), excludes, buildflags, is_meta)
    self.is_codegen = True
