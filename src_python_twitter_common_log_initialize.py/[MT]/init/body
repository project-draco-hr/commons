def init(filebase=None):
    '\n    Sets up default stderr logging and, if filebase is supplied, sets up disk logging using:\n      {--log_dir}/filebase.{INFO,WARNING,...}\n  '
    logging._acquireLock()
    root_logger = logging.getLogger()
    root_logger.setLevel(logging.DEBUG)
    teardown_stderr_logging()
    teardown_disk_logging()
    for handler in root_logger.handlers:
        root_logger.removeHandler(handler)
    if filebase:
        for handler in _setup_disk_logging(filebase):
            root_logger.addHandler(handler)
            _DISK_LOGGERS.append(handler)
    for handler in _setup_stderr_logging():
        root_logger.addHandler(handler)
        _STDERR_LOGGERS.append(handler)
    logging._releaseLock()
    if ((len(_DISK_LOGGERS) > 0) and (LogOptions.stderr_log_level() != LogOptions.LOG_LEVEL_NONE)):
        print(('Writing log files to disk in %s' % LogOptions.log_dir()), file=sys.stderr)
    return root_logger
