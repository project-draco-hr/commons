{
  for (  Element positionalArg : getAnnotatedElements(roundEnv,Positional.class)) {
    @Nullable TypeMirror typeArgument=getTypeArgument(positionalArg.asType(),typeElement(Arg.class));
    if ((typeArgument == null) || !typeUtils.isSubtype(typeElement(List.class).asType(),typeArgument)) {
      error("Found @Positional %s %s.%s that is not a List",positionalArg.asType(),positionalArg.getEnclosingElement(),positionalArg);
    }
  }
}
