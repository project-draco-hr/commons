{
  @Nullable Configuration classpathConfiguration=configSupplier.get();
  Set<? extends Element> parsers=getAnnotatedElements(roundEnv,ArgParser.class);
  @Nullable Set<String> parsedTypes=getParsedTypes(classpathConfiguration,parsers);
  for (  ArgInfo cmdLineInfo : processAnnotatedArgs(parsedTypes,roundEnv,CmdLine.class)) {
    configBuilder.addCmdLineArg(cmdLineInfo);
  }
  for (  ArgInfo positionalInfo : processAnnotatedArgs(parsedTypes,roundEnv,Positional.class)) {
    configBuilder.addPositionalInfo(positionalInfo);
  }
  checkPositionalArgsAreLists(roundEnv);
  processParsers(parsers);
  processVerifiers(roundEnv.getElementsAnnotatedWith(typeElement(VerifierFor.class)));
  if (roundEnv.processingOver()) {
    if (classpathConfiguration != null && (!classpathConfiguration.isEmpty() || !configBuilder.isEmpty())) {
      @Nullable Writer cmdLinePropertiesResource=openCmdLinePropertiesResource(classpathConfiguration);
      if (cmdLinePropertiesResource != null) {
        try {
          configBuilder.build(classpathConfiguration).store(cmdLinePropertiesResource,"Generated via apt by " + getClass().getName());
        }
  finally {
          Closeables.closeQuietly(cmdLinePropertiesResource);
        }
      }
    }
  }
  return true;
}
