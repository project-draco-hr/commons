def get_update_artifact_cache_work(self, vts_artifactfiles_pairs, cache=None):
    "Create a Work instance to update the artifact cache, if we're configured to.\n\n    vts_artifactfiles_pairs - a list of pairs (vts, artifactfiles) where\n      - vts is single VersionedTargetSet.\n      - artifactfiles is a list of paths to artifacts for the VersionedTargetSet.\n    "
    cache = (cache or self.get_artifact_cache())
    if cache:
        if (len(vts_artifactfiles_pairs) == 0):
            return None
        targets = set()
        for (vts, _) in vts_artifactfiles_pairs:
            targets.update(vts.targets)
        self._report_targets('Caching artifacts for ', list(targets), '.')
        args_tuples = []
        for (vts, artifactfiles) in vts_artifactfiles_pairs:
            if self.context.options.verify_artifact_cache:
                pass
            args_tuples.append((vts.cache_key, artifactfiles))
        return Work((lambda *args: cache.insert(*args)), args_tuples, 'insert')
    else:
        return None
