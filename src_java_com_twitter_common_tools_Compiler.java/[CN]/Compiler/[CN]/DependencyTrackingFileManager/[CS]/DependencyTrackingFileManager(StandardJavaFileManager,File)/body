{
  super(fileManager);
  this.dependencyFile=dependencies;
  if (dependencyFile.exists()) {
    System.out.println("Reading existing dependency file at " + dependencies);
    BufferedReader dependencyReader=new BufferedReader(new FileReader(dependencies));
    try {
      int line=0;
      while (true) {
        String mapping=dependencyReader.readLine();
        if (mapping == null) {
          break;
        }
        line++;
        String[] components=mapping.split(" -> ");
        if (components.length != 2) {
          System.err.printf("Ignoring malformed dependency in %s[%d]: %s\n",dependencies,line,mapping);
        }
 else {
          String sourceRelpath=components[0];
          String classRelpath=components[1];
          addMapping(sourceRelpath,classRelpath);
        }
      }
    }
  finally {
      dependencyReader.close();
    }
  }
  priorSources.addAll(sourceToClasses.keySet());
}
