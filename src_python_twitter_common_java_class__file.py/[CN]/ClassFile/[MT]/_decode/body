def _decode(self):
    data = self._data
    ((self._magic, self._minor_version, self._major_version), data) = JavaNativeType.parse(data, u4, u2, u2)
    assert (self._magic == 3405691582)
    ((self._constant_pool_count,), data) = JavaNativeType.parse(data, u2)
    (self._constant_pool, data) = ClassDecoders.decode_constant_pool(data, self._constant_pool_count)
    ((access_flags, this_class, super_class), data) = JavaNativeType.parse(data, u2, u2, u2)
    self._access_flags = ClassFlags(access_flags)
    self._this_class = self._constant_pool[this_class]
    self._super_class = self._constant_pool[super_class]
    ((self._interfaces_count,), data) = JavaNativeType.parse(data, u2)
    (self._interfaces, data) = ClassDecoders.decode_interfaces(data, self._interfaces_count, self._constant_pool)
    ((self._fields_count,), data) = JavaNativeType.parse(data, u2)
    (self._fields, data) = ClassDecoders.decode_fields(data, self._fields_count, self._constant_pool)
    ((self._methods_count,), data) = JavaNativeType.parse(data, u2)
    (self._methods, data) = ClassDecoders.decode_methods(data, self._methods_count, self._constant_pool)
    ((self._attributes_count,), data) = JavaNativeType.parse(data, u2)
    (self._attributes, data) = ClassDecoders.decode_attributes(data, self._attributes_count, self._constant_pool)
