{
  if (!nextStates.isEmpty()) {
    restoreState(nextStates.poll());
    return true;
  }
  if (!incrementInputStream()) {
    return false;
  }
  if (offsetMap.containsKey(offset())) {
    int startOffset=offset();
    int endOffset=offsetMap.get(startOffset);
    if (endOffset == startOffset + length()) {
      if (type != null) {
        updateType(type);
      }
      return true;
    }
    nextStates.add(captureState());
    while (incrementInputStream()) {
      nextStates.add(captureState());
      int currentEndOffset=offset() + length();
      if (currentEndOffset == endOffset) {
        restoreState(nextStates.poll());
        updateOffsetAndLength(startOffset,endOffset - startOffset);
        if (type != null) {
          updateType(type);
        }
        nextStates.clear();
        break;
      }
 else       if (currentEndOffset > endOffset) {
        break;
      }
    }
    if (!nextStates.isEmpty()) {
      restoreState(nextStates.poll());
    }
  }
  return true;
}
