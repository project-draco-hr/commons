def use_cached_files(self, cache_key):
    remote_path = self._remote_path_for_key(cache_key)
    try:
        response = self._request('GET', remote_path)
        if (response is None):
            return None
        done = False
        with temporary_file() as outfile:
            total_bytes = 0
            while (not done):
                data = response.read(self.READ_SIZE)
                outfile.write(data)
                if (len(data) < self.READ_SIZE):
                    done = True
                total_bytes += len(data)
            outfile.close()
            self.log.debug(('Read %d bytes from artifact cache at %s' % (total_bytes, self._url_string(remote_path))))
            artifact = TarballArtifact(self.artifact_root, outfile.name, self.compress)
            artifact.extract()
            return artifact
    except Exception as e:
        self.log.warn(('Error while reading from remote artifact cache: %s' % e))
        return None
