{
  this.statRegistry=checkNotNull(statRegistry);
  this.samplePeriod=checkNotNull(samplePeriod);
  Preconditions.checkArgument(samplePeriod.getValue() > 0,"Sample period must be positive.");
  checkNotNull(retentionPeriod);
  Preconditions.checkArgument(retentionPeriod.getValue() > 0,"Sample retention period must be positive.");
  retainedSampleLimit=(int)(retentionPeriod.as(Time.SECONDS) / samplePeriod.as(Time.SECONDS));
  Preconditions.checkArgument(retainedSampleLimit > 0,"Sample retention period must be greater than sample period.");
  timeSeries=CacheBuilder.newBuilder().build(new CacheLoader<String,TimeSeriesImpl>(){
    @Override public TimeSeriesImpl load(    final String name){
      TimeSeriesImpl timeSeries=new TimeSeriesImpl(name);
      int numTimestamps=timestamps.size();
      if (numTimestamps != 0) {
        for (int i=1; i < numTimestamps; i++) {
          timeSeries.addSample(0L);
        }
      }
      return timeSeries;
    }
  }
);
  timestamps=new BoundedQueue<Number>(retainedSampleLimit);
}
