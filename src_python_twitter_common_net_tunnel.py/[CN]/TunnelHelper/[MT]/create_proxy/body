@classmethod
def create_proxy(cls, proxy_host=None, proxy_port=None):
    '\n      Create or retrieve a memoized SOCKS proxy using the specified proxy host:port\n    '
    if (proxy_host in cls.PROXIES):
        return ('localhost', cls.PROXIES[proxy_host][0])
    (proxy_host, proxy_port) = cls.acquire_host_pair(proxy_host, proxy_port)
    cls.log(('opening SOCKS proxy connection through %s:%s' % (proxy_host, proxy_port)))
    ssh_cmd_args = ('ssh', '-T', '-D', str(proxy_port), proxy_host)
    cls.PROXIES[proxy_host] = (proxy_port, subprocess.Popen(ssh_cmd_args, stdin=subprocess.PIPE))
    if (not cls.wait_for_accept(proxy_port)):
        raise cls.TunnelError(('Could not establish proxy via %s' % proxy_host))
    cls.log('session established')
    return ('localhost', proxy_port)
