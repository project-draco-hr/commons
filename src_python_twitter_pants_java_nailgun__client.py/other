from __future__ import print_function
__author__ = 'John Sirois'
import os
import re
import select
import socket
import struct
import sys
import threading
from functools import partial
from twitter.common import app
from twitter.common.log import logger
DEFAULT_NG_HOST = 'localhost'
DEFAULT_NG_PORT = 2113
ENV_DEFAULTS = dict(NAILGUN_FILESEPARATOR=os.sep, NAILGUN_PATHSEPARATOR=os.pathsep)
HEADER_FMT = '>Ic'
HEADER_LENGTH = 5
BUFF_SIZE = 8096
log = logger(name='ng')
app.add_option('--nailgun-version', dest='just_version', default=False, action='store_true', help='print product version and exit')
app.add_option('--nailgun-showversion', dest='show_version', default=False, action='store_true', help='print product version and continue')
app.add_option('--nailgun-server', dest='ng_host', metavar='HOST', default=DEFAULT_NG_HOST, help='to specify the address of the nailgun server (default is %default)')
app.add_option('--nailgun-port', dest='ng_port', metavar='PORT', default=DEFAULT_NG_PORT, type='int', help='to specify the port of the nailgun server (default is %default)')
app.add_option('--nailgun-help', dest='show_help', default=False, action='store_true', help='print this message and exit')
app.set_usage(('%(command)s class [--nailgun-options] [args]\n          (to execute a class)\n   or: %(command)s alias [options] [args]\n          (to execute an aliased class)\n   or: alias [options] [args]\n          (to execute an aliased class, where "alias"\n           is both the alias for the class and a symbolic\n           link to the ng client)\n' % dict(command=sys.argv[0])))
app.main()
