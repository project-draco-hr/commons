def test_href_translation():
    VERSIONS = ['0.4.0', '0.4.1', '0.5.0', '0.6.0']

    def fake_link(version):
        return ('http://www.example.com/foo/bar/psutil-%s.tar.gz' % version)
    fc = FakeCrawler(map(fake_link, VERSIONS))
    ob = Obtainer(fc, [], [])
    for v in VERSIONS:
        pkgs = list(ob.iter(Requirement.parse(('psutil==%s' % v))))
        assert (len(pkgs) == 1)
        assert (pkgs[0] == SourceLink(fake_link(v)))
    assert (list(ob.iter(Requirement.parse('psutil>=0.5.0'))) == [SourceLink(fake_link('0.6.0')), SourceLink(fake_link('0.5.0'))])
    assert (list(ob.iter(Requirement.parse('psutil'))) == map(SourceLink, map(fake_link, reversed(VERSIONS))))
