def _handle_processed_node_set(self, versioned_target_set, target_node_set, was_compiled, was_successful):
    "Add a node's parents to the frontier set, excepting any that are also ancestors of another of its parents.\n\n    This should be called on every target set that we inspect, regardless of whether it needed to be compiled or\n    not."
    if (was_compiled and was_successful and self._post_compile_cmd):
        self._post_compile_cmd(versioned_target_set)
    if (was_compiled and (not was_successful)):
        self._failed_compiles.append(target_node_set)
    self._processed_nodes += target_node_set
    self._logger.info(('Processed %d out of %d targets. ' % (len(self._processed_nodes), len(self._tree.nodes))))
    self._logger.info(('In flight (%d): {%s}. ' % (len(self._in_flight_target_nodes), ','.join([t.short_id for t in self._in_flight_target_nodes]))))
    self._logger.info(('Frontier (%d): {%s}' % (len(self._frontier_nodes), ','.join((t.short_id for t in self._frontier_nodes)))))
    new_leaves = self._tree.remove_nodes(target_node_set)
    self._frontier_nodes.update(new_leaves)
