'\n  Twitter\'s wrapper around the optparse module for doing more stateless builder-style\n  options parsing.\n\n  Typical usage:\n\n    from twitter.common import options\n\n    base_parser = options.parser()\n    my_opts = [\n      options.Option(...),\n      options.Option(...)\n    ]\n    my_foo_opts = [\n      options.Option(...),\n      options.Option(...)\n    ]\n    group = base_parser.new_group(\'foo\')\n    group.add_option(*my_foo_opts)\n    parser = base_parser\n             .options(my_opts)\n             .groups([group])\n             .interspersed_arguments(True)\n             .usage("blah blah blah"))\n    values, rargs = parser.parse()\n'
__author__ = 'Brian Wickman'
import copy
import sys
import inspect
import types
from optparse import OptionParser, OptionValueError, Option, OptionGroup, Values, NO_DEFAULT
from .twitter_option import TwitterOption
group = new_group
__all__ = ['parser', 'new_group', 'group', 'Option', 'TwitterOption', 'Values']
