def __init__(self, name, sources=None, java_sources=None, dependencies=None, excludes=None, resources=None, buildflags=None, exclusives=None):
    "\n    :param name: The name of this module target, addressable via pants via the portion of the spec\n      following the colon\n    :param sources: A list of filenames representing the source code\n      this library is compiled from.\n    :type sources: list of strings\n    :param java_sources:\n      :class:`twitter.pants.targets.java_library.JavaLibrary` or list of\n      JavaLibrary targets this library has a circular dependency on.\n      Prefer using dependencies to express non-circular dependencies.\n    :param Artifact provides:\n      The :class:`twitter.pants.targets.artifact.Artifact`\n      to publish that represents this target outside the repo.\n    :param dependencies: List of :class:`twitter.pants.base.target.Target` instances\n      this target depends on.\n    :type dependencies: list of targets\n    :param excludes: List of :class:`twitter.pants.targets.exclude.Exclude` instances\n      to filter this target's transitive dependencies against.\n    :param resources: An optional list of Resources that should be in this target's classpath.\n    :param buildflags: Unused, and will be removed in a future release.\n    :param exclusives: An optional map of exclusives tags. See CheckExclusives for details.\n    "
    JvmTarget.__init__(self, name, sources, dependencies, excludes, exclusives=exclusives)
    self.add_labels('scala', 'tests')
    self.java_sources = java_sources
    self.resources = list(self.resolve_all(resources, Resources))
