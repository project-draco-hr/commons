def __init__(self, name, sources=None, java_sources=None, dependencies=None, excludes=None, resources=None, buildflags=None, exclusives=None):
    "name: The name of this module target, addressable via pants via the portion of the spec\n        following the colon\n    sources: A list of paths containing the scala source files this modules tests are compiled from.\n    java_sources: An optional JavaLibrary target or list of targets containing the java libraries\n        this library has a circular dependency on.  Prefer using dependencies to express\n        non-circular dependencies.\n    dependencies: An optional list of Dependency objects specifying the binary (jar) dependencies of\n        this module.\n    excludes: An optional list of dependency exclude patterns to filter all of this module's\n        transitive dependencies against.\n    resources: An optional list of Resources that should be in this target's classpath.\n    buildflags: DEPRECATED - A list of additional command line arguments to pass to the underlying\n        build system for this target - now ignored.\n    exclusives:   An optional map of exclusives tags. See CheckExclusives for details.\n    "
    JvmTarget.__init__(self, name, sources, dependencies, excludes, exclusives=exclusives)
    self.add_labels('scala', 'tests')
    self.java_sources = java_sources
    self.resources = list(self.resolve_all(resources, Resources))
