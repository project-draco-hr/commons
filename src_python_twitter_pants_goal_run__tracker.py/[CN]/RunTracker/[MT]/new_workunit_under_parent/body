@contextmanager
def new_workunit_under_parent(self, name, parent, labels=list(), cmd=''):
    "Creates a (hierarchical) subunit of work for the purpose of timing and reporting.\n\n    - name: A short name for this work. E.g., 'resolve', 'compile', 'scala', 'zinc'.\n    - parent: The new workunit is created under this parent.\n    - labels: An optional iterable of labels. The reporters can use this to decide how to\n              display information about this work.\n    - cmd: An optional longer string representing this work.\n           E.g., the cmd line of a compiler invocation.\n\n    Task code should not typically call this directly.\n    "
    workunit = WorkUnit(run_tracker=self, parent=parent, name=name, labels=labels, cmd=cmd)
    workunit.start()
    try:
        try:
            self.report.start_workunit(workunit)
            yield workunit
        except KeyboardInterrupt:
            workunit.set_outcome(WorkUnit.ABORTED)
            self._aborted = True
            raise
        except:
            workunit.set_outcome(WorkUnit.FAILURE)
            raise
        else:
            workunit.set_outcome(WorkUnit.SUCCESS)
    finally:
        self.report.end_workunit(workunit)
        workunit.end()
