def fetch(self, requirement):
    '\n      Fetch a requirement and unpack it into a temporary directory.\n\n      The responsibility of cleaning up the temporary directory returned is\n      that of the caller.\n    '
    download_tmp = tempfile.mkdtemp()
    for _ in range(Fetcher.MAX_RETRIES):
        ir = InstallRequirement.from_line(str(requirement))
        try:
            try:
                ir_link = self._finder.find_requirement(ir, upgrade=True)
            except DistributionNotFound:
                return None
            unpack_http_url(ir_link, download_tmp, self._cache)
            return download_tmp
        except HTTPError as e:
            print ('Got HTTPError: %s..retrying' % e)
            time.sleep(0.1)
            self._reinit()
    return None
