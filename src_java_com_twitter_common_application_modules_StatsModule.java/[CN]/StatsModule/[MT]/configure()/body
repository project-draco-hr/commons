{
  requireBinding(ShutdownRegistry.class);
  requireBinding(BuildInfo.class);
  bind(StatRegistry.class).toInstance(Stats.STAT_REGISTRY);
  bind(new TypeLiteral<Amount<Long,Time>>(){
  }
).annotatedWith(Names.named(TimeSeriesRepositoryImpl.SAMPLE_RETENTION_PERIOD)).toInstance(RETENTION_PERIOD.get());
  bind(new TypeLiteral<Amount<Long,Time>>(){
  }
).annotatedWith(Names.named(TimeSeriesRepositoryImpl.SAMPLE_PERIOD)).toInstance(SAMPLING_INTERVAL.get());
  bind(TimeSeriesRepository.class).to(TimeSeriesRepositoryImpl.class).in(Singleton.class);
  bind(new TypeLiteral<Supplier<Iterable<Stat<?>>>>(){
  }
).toInstance(new Supplier<Iterable<Stat<?>>>(){
    @Override public Iterable<Stat<?>> get(){
      return Stats.getVariables();
    }
  }
);
  LifecycleModule.bindStartupAction(binder(),StartStatPoller.class);
}
