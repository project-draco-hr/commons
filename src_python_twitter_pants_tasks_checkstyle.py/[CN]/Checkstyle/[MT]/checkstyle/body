def checkstyle(self, sources, targets):
    egroups = self.context.products.get_data('exclusives_groups')
    etag = egroups.get_group_key_for_target(targets[0])
    classpath = self._jvm_tool_bootstrapper.get_jvm_tool_classpath(self._checkstyle_bootstrap_key)
    cp = egroups.get_classpath_for_group(etag)
    classpath.extend((jar for (conf, jar) in cp if (conf in self._confs)))
    args = ['-c', self._configuration_file, '-f', 'plain']
    if self._properties:
        properties_file = os.path.join(self._work_dir, 'checkstyle.properties')
        with safe_open(properties_file, 'w') as pf:
            for (k, v) in self._properties.items():
                pf.write(('%s=%s\n' % (k, v)))
        args.extend(['-p', properties_file])

    def call(xargs):
        return self.runjava(classpath=classpath, main=CHECKSTYLE_MAIN, args=(args + xargs), workunit_name='checkstyle')
    checks = Xargs(call)
    return checks.execute(sources)
