def _prepare_bootstrap(self):
    '\n      Write enough of distribute into the .pex .bootstrap directory so that\n      we can be fully self-contained.\n    '
    bare_env = pkg_resources.Environment()
    distribute_req = pkg_resources.Requirement.parse('distribute>=0.6.24')
    distribute_dist = None
    for dist in DistributionHelper.all_distributions(sys.path):
        if ((dist in distribute_req) and bare_env.can_add(dist)):
            distribute_dist = dist
            break
    else:
        raise DistributionNotFound('Could not find distribute!')
    for (fn, content) in DistributionHelper.walk_data(distribute_dist):
        if (fn.startswith('pkg_resources.py') or fn.startswith('setuptools')):
            self._chroot.write(content, os.path.join(self.BOOTSTRAP_DIR, fn), 'resource')
    libraries = ('twitter.common.dirutil', 'twitter.common.collections', 'twitter.common.contextutil', 'twitter.common.lang', 'twitter.common.python', 'twitter.common.python.http', 'twitter.common.quantity')
    for name in libraries:
        dirname = name.replace('.', '/')
        provider = pkg_resources.get_provider(name)
        if (not isinstance(provider, pkg_resources.DefaultProvider)):
            mod = __import__(name, fromlist=['wutttt'])
            provider = pkg_resources.ZipProvider(mod)
        for fn in provider.resource_listdir(''):
            if fn.endswith('.py'):
                self._chroot.write(provider.get_resource_string(name, fn), os.path.join(self.BOOTSTRAP_DIR, dirname, fn), 'resource')
    for initdir in ('twitter', 'twitter/common'):
        self._chroot.write("__import__('pkg_resources').declare_namespace(__name__)", os.path.join(self.BOOTSTRAP_DIR, initdir, '__init__.py'), 'resource')
