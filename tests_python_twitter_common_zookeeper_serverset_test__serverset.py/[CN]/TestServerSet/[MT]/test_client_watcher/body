def test_client_watcher(self):
    canceled_endpoints = []
    canceled = threading.Event()
    joined_endpoints = []
    joined = threading.Event()

    def on_join(endpoint):
        joined_endpoints[:] = [endpoint]
        joined.set()

    def on_leave(endpoint):
        canceled_endpoints[:] = [endpoint]
        canceled.set()
    service1 = ServerSet(ZooKeeper(self._server.ensemble), self.SERVICE_PATH, on_join=on_join, on_leave=on_leave)
    service2 = ServerSet(ZooKeeper(self._server.ensemble), self.SERVICE_PATH)
    member1 = service2.join(self.INSTANCE1)
    joined.wait(2.0)
    assert joined.is_set()
    assert (not canceled.is_set())
    assert (joined_endpoints == [ServiceInstance(self.INSTANCE1)])
    joined.clear()
    service2.join(self.INSTANCE2)
    joined.wait(2.0)
    assert joined.is_set()
    assert (not canceled.is_set())
    assert (joined_endpoints == [ServiceInstance(self.INSTANCE2)])
    joined.clear()
    service2.cancel(member1)
    canceled.wait(2.0)
    assert canceled.is_set()
    assert (not joined.is_set())
    assert (canceled_endpoints == [ServiceInstance(self.INSTANCE1)])
    canceled.clear()
