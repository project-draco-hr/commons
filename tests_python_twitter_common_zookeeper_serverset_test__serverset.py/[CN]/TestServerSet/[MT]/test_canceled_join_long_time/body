def test_canceled_join_long_time(self):
    zk = ZooKeeper(self._server.ensemble)
    session_id = zk.session_id
    ss = ServerSet(zk, self.SERVICE_PATH)
    join_signal = threading.Event()
    memberships = []

    def on_expire():
        pass

    def do_join():
        memberships.append(ss.join(self.INSTANCE1, expire_callback=on_expire))


    class JoinThread(threading.Thread):

        def run(_):
            while True:
                join_signal.wait()
                join_signal.clear()
                do_join()
    joiner = JoinThread()
    joiner.daemon = True
    joiner.start()
    do_join()
    assert ((len(memberships) == 1) and (memberships[0] is not Membership.error()))
    self._server.expire(session_id)
    self._server.shutdown()
    join_signal.set()
    self._server.start()
    while (len(memberships) == 1):
        time.sleep(0.1)
    assert ((len(memberships) == 2) and (memberships[1] is not Membership.error()))
