def genlang(self, lang, targets):
    if (lang != 'java'):
        raise TaskError(('Unrecognized antlr gen lang: %s' % lang))
    for target in targets:
        java_out = self._java_out(target)
        safe_mkdir(java_out)
        antlr_classpath = self._jvm_tool_bootstrapper.get_jvm_tool_classpath(target.compiler, self.runjava_indivisible)
        args = ['-o', java_out]
        if (target.compiler == 'antlr3'):
            java_main = 'org.antlr.Tool'
        elif (target.compiler == 'antlr4'):
            args.append('-visitor')
            java_main = 'org.antlr.v4.Tool'
        else:
            raise TaskError('Unknown ANTLR compiler: {}'.format(target.compiler))
        sources = self._calculate_sources([target])
        args.extend(sources)
        result = self.runjava_indivisible(java_main, classpath=antlr_classpath, args=args, workunit_name='antlr')
        if (result != 0):
            raise TaskError
