def execute(self, targets):
    depmap = self.context.products.get('idl_dependencies')

    def process(target):
        sources = set()
        extract_base = os.path.join(self._workdir, target.id)
        safe_rmtree(extract_base)
        target.target_base = os.path.relpath(extract_base, get_buildroot())
        for (basedir, jars) in depmap.get(target).items():
            if (len(jars) != 1):
                raise TaskError(('%s must have exactly one jar dependency but found %s' % (target.name, jars)))
            sources.update(self._extract(extract_base, os.path.join(basedir, jars[0])))
        target.sources = sources
    for target in targets:
        target.walk(process, predicate=(lambda target: isinstance(target, IdlJvmThriftLibrary)))
