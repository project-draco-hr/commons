def execute_pantsdoc(self, targets, target_path):
    if (not os.path.exists(target_path)):
        os.makedirs(target_path)
    try:
        doc_targets = filter(is_doc, targets)
        for doc_target in doc_targets:

            def exec_doc(dependency):
                for dep_target in dependency.resolve():
                    if is_jvm(dep_target):
                        self.execute_javadoc([dep_target], os.path.join(target_path, doc_target.id, dep_target.id))
                    if (is_doc(dep_target) and (not (dep_target in targets))):
                        self.execute_pantsdoc([dep_target], os.path.join(target_path, doc_target.id, dep_target.id))
            doc_target.walk(exec_doc)
        executor = DocBuilder(target_path)
        return executor.build(doc_targets, self.args)
    except:
        self.error(('Problem executing PantsDocBuilder for targets %s: %s' % (doc_targets, traceback.format_exc())))
