def _maybe_resolve_bundles(self):
    if (self._bundles is not None):

        def is_resolvable(item):
            return hasattr(item, 'resolve')

        def is_bundle(bundle):
            return isinstance(bundle, Bundle)

        def resolve(item):
            return (list(item.resolve()) if is_resolvable(item) else [None])
        if is_resolvable(self._bundles):
            self._bundles = resolve(self._bundles)
        try:
            for item in iter(self._bundles):
                for bundle in resolve(item):
                    if (not is_bundle(bundle)):
                        raise TypeError()
                    self._resolved_bundles.append(bundle)
        except TypeError:
            raise TargetDefinitionException(self, ('bundles must be one or more Bundle objects, got %s' % self._bundles))
        self._bundles = None
