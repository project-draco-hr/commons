@classmethod
def minified_dependencies(cls, root_target):
    'Minify the dependencies of a PythonTarget.'
    depmap = cls.construct_provider_map(root_target)
    root_deps = depmap.pop(root_target, OrderedSet())

    def elide(target):
        if any(((target in depset) for depset in depmap.values())):
            root_deps.discard(target)
    root_target.walk(elide)
    return root_deps
