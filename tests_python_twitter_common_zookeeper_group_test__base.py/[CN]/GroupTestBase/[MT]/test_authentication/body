def test_authentication(self):
    secure_zk = self.make_zk(self._server.ensemble, authentication=('digest', 'username:password'))
    zkg = self.GroupImpl(self._zk, '/test')
    secure_zkg = self.GroupImpl(secure_zk, '/test', acl=self.ACLS['EVERYONE_READ_CREATOR_ALL'])
    membership = zkg.join('hello world')
    assert (secure_zkg.info(membership) == 'hello world')
    membership = secure_zkg.join('secure hello world')
    assert (zkg.info(membership) == 'secure hello world')
    zkg = self.GroupImpl(self._zk, '/secure-test')
    secure_zkg = self.GroupImpl(secure_zk, '/secure-test', acl=self.ACLS['EVERYONE_READ_CREATOR_ALL'])
    membership = secure_zkg.join('hello world')
    assert (zkg.info(membership) == 'hello world')
    assert (zkg.join('unsecure hello world') == Membership.error())
    zkg = self.GroupImpl(self._zk, '/secure-test2')
    secure_zkg = self.GroupImpl(secure_zk, '/secure-test2', acl=self.ACLS['EVERYONE_READ_CREATOR_ALL'])
    membership_event = threading.Event()
    members = set()

    def new_membership(m):
        members.update(m)
        membership_event.set()
    zkg.monitor(callback=new_membership)
    membership = secure_zkg.join('hello world')
    membership_event.wait(timeout=1.0)
    assert membership_event.is_set()
    assert (members == set([membership]))
