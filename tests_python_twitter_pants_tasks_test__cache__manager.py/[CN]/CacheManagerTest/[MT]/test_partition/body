def test_partition(self):
    a = MockTarget('a', [], 1)
    b = MockTarget('b', [a], 1)
    c = MockTarget('c', [b], 1)
    d = MockTarget('d', [c, a], 1)
    e = MockTarget('e', [d], 1)
    targets = [a, b, c, d, e]
    all_vts = self.cache_manager._sort_and_validate_targets(targets)
    [print_vt(vt) for vt in all_vts]
    print ''
    invalid_vts = filter((lambda vt: (not vt.valid)), all_vts)
    self.assertEquals(5, len(invalid_vts))
    self.assertEquals(5, len(all_vts))
    vts_targets = [vt.targets[0] for vt in all_vts]
    self.assertEquals(set(targets), set(vts_targets))
    ic = InvalidationCheck(all_vts, [], 3)
    partitioned = ic.all_vts_partitioned
    [print_vt(vt) for vt in partitioned]
    self.assertEquals(2, len(partitioned))
    self.assertEquals(4, len(partitioned[0].targets))
    self.assertEquals(1, len(partitioned[1].targets))
