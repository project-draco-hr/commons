{
  TypeToken<List<? extends Number>> numberListTypeToken=new TypeToken<List<? extends Number>>(){
  }
;
  Type numberListType=numberListTypeToken.getType();
  assertTrue(numberListType instanceof ParameterizedType);
  ParameterizedType listType=(ParameterizedType)numberListType;
  assertEquals(List.class,listType.getRawType());
  Type[] typeArguments=listType.getActualTypeArguments();
  assertEquals(1,typeArguments.length);
  Type listTypeArgument=typeArguments[0];
  assertTrue(listTypeArgument instanceof WildcardType);
  Type[] lowerBounds=((WildcardType)listTypeArgument).getLowerBounds();
  assertEquals(0,lowerBounds.length);
  Type[] upperBounds=((WildcardType)listTypeArgument).getUpperBounds();
  assertEquals(1,upperBounds.length);
  assertEquals(Number.class,upperBounds[0]);
}
