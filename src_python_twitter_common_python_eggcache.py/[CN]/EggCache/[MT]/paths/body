def paths(self):
    '\n      Return valid sys.path components for this egg, dumping them to a local\n      cache if necessary.\n    '

    def same(filename, contents):
        if (not os.path.exists(filename)):
            return False
        if (not os.path.isfile(filename)):
            return True
        with open(filename, 'rb') as fp:
            file_contents = fp.read()
        return (hashlib.md5(file_contents).digest() == hashlib.md5(contents).digest())

    def populate_cache():
        safe_mkdir(self._cache_path)
        for fn in self._pex.listdir():
            egg_prefix = '/'.join(fn.split('/')[0:2])
            if (egg_prefix in self._registry):
                fn_contents = self._pex.read(fn)
                dest = os.path.join(self._cache_path, fn)
                if same(dest, fn_contents):
                    continue
                with safe_open(dest, 'wb') as fn_out:
                    fn_out.write(fn_contents)
    if self._pex.is_condensed():
        populate_cache()
    path_adjuncts = []
    for egg in self._registry:
        path_adjuncts.append(os.path.join(self._cache_path, egg))
    return path_adjuncts
