def get_coverage_patterns(self, targets):
    if self.coverage_filters:
        return self.coverage_filters
    else:
        classes_under_test = set()
        classes_by_source = self.context.products.get('classes')

        def add_sources_under_test(tgt):
            if (is_java(tgt) and (not is_test(tgt)) and (not tgt.is_codegen)):
                for source in tgt.sources:
                    classes = classes_by_source.get(source)
                    if classes:
                        for (base, classes) in classes.items():
                            classes_under_test.update((JUnitRun.classfile_to_classname(cls) for cls in classes))
        for target in targets:
            target.walk(add_sources_under_test)
        return classes_under_test
