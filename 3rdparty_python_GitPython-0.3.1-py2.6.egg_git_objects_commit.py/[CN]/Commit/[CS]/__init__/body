def __init__(self, repo, binsha, tree=None, author=None, authored_date=None, author_tz_offset=None, committer=None, committed_date=None, committer_tz_offset=None, message=None, parents=None, encoding=None):
    "Instantiate a new Commit. All keyword arguments taking None as default will \n\t\tbe implicitly set on first query. \n\t\t\n\t\t:param binsha: 20 byte sha1\n\t\t:param parents: tuple( Commit, ... ) \n\t\t\tis a tuple of commit ids or actual Commits\n\t\t:param tree: Tree\n\t\t\tTree object\n\t\t:param author: Actor\n\t\t\tis the author string ( will be implicitly converted into an Actor object )\n\t\t:param authored_date: int_seconds_since_epoch\n\t\t\tis the authored DateTime - use time.gmtime() to convert it into a \n\t\t\tdifferent format\n\t\t:param author_tz_offset: int_seconds_west_of_utc\n\t\t\tis the timezone that the authored_date is in\n\t\t:param committer: Actor\n\t\t\tis the committer string\n\t\t:param committed_date: int_seconds_since_epoch\n\t\t\tis the committed DateTime - use time.gmtime() to convert it into a \n\t\t\tdifferent format\n\t\t:param committer_tz_offset: int_seconds_west_of_utc\n\t\t\tis the timezone that the authored_date is in\n\t\t:param message: string\n\t\t\tis the commit message\n\t\t:param encoding: string\n\t\t\tencoding of the message, defaults to UTF-8\n\t\t:param parents:\n\t\t\tList or tuple of Commit objects which are our parent(s) in the commit \n\t\t\tdependency graph\n\t\t:return: git.Commit\n\t\t\n\t\t:note: Timezone information is in the same format and in the same sign \n\t\t\tas what time.altzone returns. The sign is inverted compared to git's \n\t\t\tUTC timezone."
    super(Commit, self).__init__(repo, binsha)
    if (tree is not None):
        assert isinstance(tree, Tree), ('Tree needs to be a Tree instance, was %s' % type(tree))
    if (tree is not None):
        self.tree = tree
    if (author is not None):
        self.author = author
    if (authored_date is not None):
        self.authored_date = authored_date
    if (author_tz_offset is not None):
        self.author_tz_offset = author_tz_offset
    if (committer is not None):
        self.committer = committer
    if (committed_date is not None):
        self.committed_date = committed_date
    if (committer_tz_offset is not None):
        self.committer_tz_offset = committer_tz_offset
    if (message is not None):
        self.message = message
    if (parents is not None):
        self.parents = parents
    if (encoding is not None):
        self.encoding = encoding
