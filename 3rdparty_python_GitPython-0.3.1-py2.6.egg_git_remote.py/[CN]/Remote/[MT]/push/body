def push(self, refspec=None, progress=None, **kwargs):
    "Push changes from source branch in refspec to target branch in refspec.\n\t\t\n\t\t:param refspec: see 'fetch' method\n\t\t:param progress:\n\t\t\tInstance of type RemoteProgress allowing the caller to receive \n\t\t\tprogress information until the method returns.\n\t\t\tIf None, progress information will be discarded\n\t\t\n\t\t:param kwargs: Additional arguments to be passed to git-push\n\t\t:return:\n\t\t\tIterableList(PushInfo, ...) iterable list of PushInfo instances, each \n\t\t\tone informing about an individual head which had been updated on the remote \n\t\t\tside.\n\t\t\tIf the push contains rejected heads, these will have the PushInfo.ERROR bit set\n\t\t\tin their flags.\n\t\t\tIf the operation fails completely, the length of the returned IterableList will\n\t\t\tbe null."
    proc = self.repo.git.push(self, refspec, porcelain=True, as_process=True, **kwargs)
    return self._get_push_info(proc, (progress or RemoteProgress()))
