{
  List<Capture<Leader>> leaderCaptures=Lists.newArrayList();
  List<Capture<LeaderControl>> leaderControlCaptures=Lists.newArrayList();
  for (int i=0; i < 5; i++) {
    Capture<Leader> leaderCapture=new Capture<Leader>();
    leaderCaptures.add(leaderCapture);
    Capture<LeaderControl> controlCapture=createCapture();
    leaderControlCaptures.add(controlCapture);
    expect(candidate.offerLeadership(capture(leaderCapture))).andReturn(null);
    listener.onLeading(capture(controlCapture));
    InetSocketAddress primary=InetSocketAddress.createUnresolved("foo" + i,PORT_A);
    Map<String,InetSocketAddress> aux=ImmutableMap.of("http-admin",InetSocketAddress.createUnresolved("foo" + i,PORT_B));
    expect(serverSet.join(primary,aux)).andReturn(endpointStatus);
    endpointStatus.leave();
    abdicate.execute();
  }
  control.replay();
  for (int i=0; i < 5; i++) {
    final String leaderName="foo" + i;
    newLeader(leaderName,leaderCaptures.get(i));
    leaderControlCaptures.get(i).getValue().advertise();
    leaderControlCaptures.get(i).getValue().leave();
  }
}
