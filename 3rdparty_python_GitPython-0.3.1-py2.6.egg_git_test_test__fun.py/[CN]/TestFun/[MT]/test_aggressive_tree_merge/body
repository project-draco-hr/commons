def test_aggressive_tree_merge(self):
    odb = self.rorepo.odb
    HC = self.rorepo.commit('6c1faef799095f3990e9970bc2cb10aa0221cf9c')
    H = HC.tree
    B = HC.parents[0].tree
    trees = [H.binsha]
    self._assert_index_entries(aggressive_tree_merge(odb, trees), trees)
    trees = [B.binsha, H.binsha]
    self._assert_index_entries(aggressive_tree_merge(odb, trees), trees)
    tree = self.rorepo.tree
    B = tree('35a09c0534e89b2d43ec4101a5fb54576b577905')
    H = tree('4fe5cfa0e063a8d51a1eb6f014e2aaa994e5e7d4')
    M = tree('1f2b19de3301e76ab3a6187a49c9c93ff78bafbd')
    trees = [B.binsha, H.binsha, M.binsha]
    self._assert_index_entries(aggressive_tree_merge(odb, trees), trees)
    B = tree('a7a4388eeaa4b6b94192dce67257a34c4a6cbd26')
    H = tree('f9cec00938d9059882bb8eabdaf2f775943e00e5')
    M = tree('44a601a068f4f543f73fd9c49e264c931b1e1652')
    trees = [B.binsha, H.binsha, M.binsha]
    self._assert_index_entries(aggressive_tree_merge(odb, trees), trees)
    self.failUnlessRaises(ValueError, aggressive_tree_merge, odb, (trees * 2))
