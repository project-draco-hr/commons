def test_tree_traversal(self):
    odb = self.rorepo.odb
    H = self.rorepo.tree('29eb123beb1c55e5db4aa652d843adccbd09ae18')
    M = self.rorepo.tree('e14e3f143e7260de9581aee27e5a9b2645db72de')
    B = self.rorepo.tree('f606937a7a21237c866efafcad33675e6539c103')
    B_old = self.rorepo.tree('1f66cfbbce58b4b552b041707a12d437cc5f400a')
    entries = traverse_trees_recursive(odb, [B_old.binsha, H.binsha], '')
    self._assert_tree_entries(entries, 2)
    oentries = traverse_trees_recursive(odb, [H.binsha, B_old.binsha], '')
    assert (len(oentries) == len(entries))
    self._assert_tree_entries(oentries, 2)
    is_no_tree = (lambda i, d: (i.type != 'tree'))
    entries = traverse_trees_recursive(odb, [B.binsha], '')
    assert (len(entries) == len(list(B.traverse(predicate=is_no_tree))))
    self._assert_tree_entries(entries, 1)
    entries = traverse_trees_recursive(odb, [B.binsha, H.binsha], '')
    self._assert_tree_entries(entries, 2)
    entries = traverse_trees_recursive(odb, [B.binsha, H.binsha, M.binsha], '')
    self._assert_tree_entries(entries, 3)
