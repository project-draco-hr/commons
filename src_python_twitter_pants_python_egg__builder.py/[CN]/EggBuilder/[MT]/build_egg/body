def build_egg(self, egg_root, target):
    'Build an egg containing the files at egg_root for the specified target.\n    There must be an egg_root/setup.py file.'
    args = [sys.executable, 'setup.py', 'bdist_egg', '--dist-dir=dist', ('--bdist-dir=build.%s' % target.name)]
    with pushd(egg_root):
        with environment_as(PYTHONPATH=':'.join(sys.path)):
            po = subprocess.Popen(args, stderr=subprocess.PIPE, stdout=subprocess.PIPE)
            comm = po.communicate()
            rv = po.returncode
        eggs = os.path.abspath(os.path.join('dist', '*.egg'))
        eggs = glob.glob(eggs)
        if ((rv != 0) or (len(eggs) != 1)):
            print(('egg generation failed (return value=%d, num eggs=%d)' % (rv, len(eggs))), file=sys.stderr)
            print('STDOUT', file=sys.stderr)
            print(comm[0], file=sys.stderr)
            print('STDERR', file=sys.stderr)
            print(comm[1], file=sys.stderr)
            raise EggBuilder.EggBuildingException(('Generation of eggs failed for target = %s' % target))
        egg_path = eggs[0]
    return egg_path
