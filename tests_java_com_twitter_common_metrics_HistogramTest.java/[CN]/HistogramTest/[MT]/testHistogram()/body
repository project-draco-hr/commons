{
  int n=10000;
  Histogram hist=new Histogram(name,new Precision(0.001,n),metrics);
  for (int i=1; i <= n; ++i) {
    hist.add(i);
  }
  Map<String,Number> sample=metrics.sample();
  assertEquals(1L,sample.get(name + ScopedMetrics.SCOPE_DELIMITER + "min"));
  assertEquals((long)n,sample.get(name + ScopedMetrics.SCOPE_DELIMITER + "max"));
  assertEquals((long)n,sample.get(name + ScopedMetrics.SCOPE_DELIMITER + "count"));
  assertEquals((long)(n * (n + 1) / 2),sample.get(name + ScopedMetrics.SCOPE_DELIMITER + "sum"));
  assertEquals((long)n / 2,sample.get(name + ScopedMetrics.SCOPE_DELIMITER + "avg"));
  long[] expected=new long[Histogram.DEFAULT_QUANTILES.length];
  for (int i=0; i < Histogram.DEFAULT_QUANTILES.length; i++) {
    expected[i]=(long)(Histogram.DEFAULT_QUANTILES[i] * n);
  }
  checkQuantiles(expected,sample);
}
