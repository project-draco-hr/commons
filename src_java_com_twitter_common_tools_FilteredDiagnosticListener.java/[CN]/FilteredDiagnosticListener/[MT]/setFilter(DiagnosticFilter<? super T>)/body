{
  if (filter == null) {
    throw new NullPointerException("The filter cannot be null.");
  }
  this.filter=new DiagnosticFilter<T>(){
    @Override public Treatment categorize(    Diagnostic<? extends T> diagnostic){
      Treatment treatment=filter.categorize(diagnostic);
      if (Treatment.PASS != treatment) {
        return treatment;
      }
      return DiagnosticFilters.STRAIGHT_MAPPING.categorize(diagnostic);
    }
  }
;
}
