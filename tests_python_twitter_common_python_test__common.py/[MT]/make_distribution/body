@contextlib.contextmanager
def make_distribution(name='my_project', zipped=False, zip_safe=True):
    interp = {'project_name': name, }
    if zip_safe:
        interp['content'] = dedent("\n    def do_something():\n      print('hello world!')\n    ")
    else:
        interp['content'] = dedent("\n    if __file__ == 'derp.py':\n      print('i am an idiot')\n    ")
    with temporary_content(PROJECT_CONTENT, interp=interp) as td:
        installer = Installer(td)
        distribution = installer.distribution()
        distiller = Distiller(distribution, debug=True)
        dist_location = distiller.distill(into=safe_mkdtemp())
        if zipped:
            yield DistributionHelper.distribution_from_path(dist_location)
        else:
            with temporary_dir() as td:
                extract_path = os.path.join(td, os.path.basename(dist_location))
                with contextlib.closing(zipfile.ZipFile(dist_location)) as zf:
                    zf.extractall(extract_path)
                yield DistributionHelper.distribution_from_path(extract_path)
