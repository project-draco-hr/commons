def _generate_ivy_report(self):
    classpath = binary_utils.nailgun_profile_classpath(self, self._profile)
    self.ng('ng-cp', *classpath)
    reports = []
    (org, name) = self._identify()
    xsl = os.path.join(self._cachedir, 'ivy-report.xsl')
    safe_mkdir(self._outdir, clean=True)
    for conf in self._confs:
        params = dict(org=org, name=name, conf=conf)
        xml = os.path.join(self._cachedir, ('%(org)s-%(name)s-%(conf)s.xml' % params))
        out = os.path.join(self._outdir, ('%(org)s-%(name)s-%(conf)s.html' % params))
        self.ng('org.apache.xalan.xslt.Process', '-IN', xml, '-XSL', xsl, '-OUT', out)
        reports.append(out)
    css = os.path.join(self._outdir, 'ivy-report.css')
    if os.path.exists(css):
        os.unlink(css)
    shutil.copy(os.path.join(self._cachedir, 'ivy-report.css'), self._outdir)
    if self._open:
        binary_utils.open(*reports)
