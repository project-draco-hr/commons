def __init__(self, name, dependencies):
    'name: The name of this module target, addressable via pants via the portion of the spec\n        following the colon\n    dependencies: one or more JarDependencies this JarLibrary bundles or Pants pointing to other\n        JarLibraries or JavaTargets\n    '
    Target.__init__(self, name)
    if (dependencies is None):
        raise TargetDefinitionException(self, 'A dependencies list must be supplied even if empty.')
    self.add_labels('jars')
    self.dependencies = resolve(dependencies)
    self.dependency_addresses = set()
    for dependency in self.dependencies:
        if hasattr(dependency, 'address'):
            self.dependency_addresses.add(dependency.address)
