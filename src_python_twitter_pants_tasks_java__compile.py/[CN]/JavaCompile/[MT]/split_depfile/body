def split_depfile(self, vt):
    depfile = self.create_depfile_path(vt.targets)
    if ((len(vt.targets) <= 1) or (not os.path.exists(depfile)) or self.dry_run):
        return
    deps = Dependencies(self._classes_dir)
    deps.load(depfile)
    classes_by_source_by_target = deps.findclasses(vt.targets)
    for target in vt.targets:
        classes_by_source = classes_by_source_by_target.get(target, {})
        dst_depfile = self.create_depfile_path([target])
        dst_deps = Dependencies(self._classes_dir)
        for (source, classes) in classes_by_source.items():
            src = os.path.join(target.target_base, source)
            dst_deps.add(src, classes)
        dst_deps.save(dst_depfile)
