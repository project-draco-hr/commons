def compile(self, classpath, sources, fingerprint, depfile, run_async=False):
    jmake_classpath = nailgun_profile_classpath(self, self._jmake_profile)
    args = ['-classpath', ':'.join(classpath), '-d', self._classes_dir, '-pdb', os.path.join(self._classes_dir, ('%s.dependencies.pdb' % fingerprint))]
    compiler_classpath = nailgun_profile_classpath(self, self._compiler_profile)
    args.extend(['-jcpath', ':'.join(compiler_classpath), '-jcmainclass', 'com.twitter.common.tools.Compiler', '-C-Tdependencyfile', ('-C%s' % depfile)])
    args.extend(self._args)
    args.extend(sources)
    log.debug(('Executing: %s %s' % (_JMAKE_MAIN, ' '.join(args))))
    if run_async:
        log.info(('\nRunning async: %s\n' % ' '.join(sources)))
    return self.runjava(_JMAKE_MAIN, classpath=jmake_classpath, args=args, jvmargs=self._jvm_args, run_async=run_async)
