def compile(self, classpath, bases, sources_by_target, fingerprint):
    safe_mkdir(self._output_dir)
    compiler_classpath = (self._compiler_classpath or nailgun_profile_classpath(self, self._profile))
    self.ng('ng-cp', *compiler_classpath)
    args = ['-classpath', ':'.join(classpath), '-C-sourcepath', ('-C%s' % ':'.join(bases)), '-d', self._output_dir, '-pdb', os.path.join(self._output_dir, ('%s.dependencies.pdb' % fingerprint))]
    args.extend(self._args)
    args.extend(reduce((lambda all, sources: (all | sources)), sources_by_target.values()))
    log.debug(('Executing: %s %s' % (self._main, ' '.join(args))))
    return self.ng(self._main, *args)
