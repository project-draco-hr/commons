def compile(self, classpath, sources, fingerprint, depfile):
    jmake_classpath = self._bootstrap_utils.get_jvm_build_tools_classpath(self._jmake_bootstrap_key, self.runjava_indivisible)
    args = ['-classpath', ':'.join(classpath), '-d', self._classes_dir, '-pdb', os.path.join(self._classes_dir, ('%s.dependencies.pdb' % fingerprint))]
    compiler_classpath = self._bootstrap_utils.get_jvm_build_tools_classpath(self._compiler_bootstrap_key, self.runjava_indivisible)
    args.extend(['-jcpath', ':'.join(compiler_classpath), '-jcmainclass', 'com.twitter.common.tools.Compiler', '-C-Tdependencyfile', ('-C%s' % depfile)])
    args.extend(map((lambda arg: ('-C%s' % arg)), self._javac_opts))
    args.extend(self._args)
    args.extend(sources)
    return self.runjava_indivisible(_JMAKE_MAIN, classpath=jmake_classpath, jvm_options=self._jvm_options, args=args, workunit_name='jmake', workunit_labels=[WorkUnit.COMPILER])
