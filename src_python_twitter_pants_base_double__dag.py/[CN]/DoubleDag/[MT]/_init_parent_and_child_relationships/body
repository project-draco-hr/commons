def _init_parent_and_child_relationships(self):

    def find_children(original_node, data):
        for child_data in self._child_fn(data):
            if (child_data in self._nodes_by_data_map):
                child_node = self._nodes_by_data_map[child_data]
                original_node.children.add(child_node)
                child_node.parents.add(original_node)
            else:
                raise Exception(("DAG child_fn shouldn't yield data objects not in tree:\n %s. child of: %s. original data: %s" % (str(child_data), str(data), str(original_node.data))))
    for node in self.nodes:
        find_children(node, node.data)
