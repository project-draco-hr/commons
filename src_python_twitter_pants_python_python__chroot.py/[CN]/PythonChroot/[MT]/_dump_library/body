def _dump_library(self, library):

    def translate_module(module):
        if (module is None):
            module = ''
        return module.replace('.', os.path.sep)

    def copy_to_chroot(base, path, relative_to=None, label=None):
        src = os.path.join(base, path)
        dst = os.path.join(translate_module(relative_to), path)
        self.chroot.copy(src, dst, label)
    template = library._create_template_data()
    print ('  Dumping library: %s [relative module: %s]' % (library, template.module))
    for filename in template.sources:
        copy_to_chroot(template.template_base, filename, template.module, 'sources')
    for filename in template.resources:
        copy_to_chroot(template.template_base, filename, template.module, 'resources')
