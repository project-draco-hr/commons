def _dump_library(self, library):

    def translate_module(module):
        if (module is None):
            module = ''
        return module.replace('.', os.path.sep)

    def copy_to_chroot(base, path, relative_to, add_function):
        src = os.path.join(self._root, base, path)
        dst = os.path.join(translate_module(relative_to), path)
        add_function(src, dst)
    self.debug(('  Dumping library: %s [relative module: %s]' % (library, library.module)))
    for filename in library.sources:
        copy_to_chroot(library.target_base, filename, library.module, self.env.add_source)
    for filename in library.resources:
        copy_to_chroot(library.target_base, filename, library.module, self.env.add_resource)
