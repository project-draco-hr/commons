{
  Type valueType=typeParams.get(0);
  Parser parser=parserOracle.get(TypeUtil.getRawType(valueType));
  Matcher matcher=AMOUNT_PATTERN.matcher(raw);
  checkArgument(matcher.matches(),"Value '" + raw + "' must be of the format 1ns, 4mb, etc.");
  Number number=(Number)parser.parse(parserOracle,valueType,matcher.group(1));
  String unitRaw=matcher.group(2);
  Type unitType=typeParams.get(1);
  Unit unit=(Unit)parserOracle.get(Unit.class).parse(parserOracle,unitType,unitRaw);
  checkArgument(unit.getClass() == unitType,String.format("Unit type (%s) does not match argument type (%s).",unit.getClass(),unitType));
  if (valueType == Integer.class) {
    return Amount.of(number.intValue(),unit);
  }
 else   if (valueType == Double.class) {
    return Amount.of(number.doubleValue(),unit);
  }
 else   if (valueType == Long.class) {
    return Amount.of(number.longValue(),unit);
  }
 else   if (valueType == Byte.class) {
    return Amount.of(number.byteValue(),unit);
  }
 else   if (valueType == Short.class) {
    return Amount.of(number.shortValue(),unit);
  }
 else   if (valueType == Float.class) {
    return Amount.of(number.floatValue(),unit);
  }
  throw new IllegalArgumentException("Unrecognized number class " + valueType);
}
