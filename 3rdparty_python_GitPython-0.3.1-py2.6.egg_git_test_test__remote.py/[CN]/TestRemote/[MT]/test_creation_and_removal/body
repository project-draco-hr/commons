@with_rw_repo('HEAD', bare=True)
def test_creation_and_removal(self, bare_rw_repo):
    new_name = 'test_new_one'
    arg_list = (new_name, 'git@server:hello.git')
    remote = Remote.create(bare_rw_repo, *arg_list)
    assert (remote.name == 'test_new_one')
    assert (remote in bare_rw_repo.remotes)
    self.failUnlessRaises(GitCommandError, Remote.create, bare_rw_repo, *arg_list)
    Remote.remove(bare_rw_repo, new_name)
    for remote in bare_rw_repo.remotes:
        if (remote.name == new_name):
            raise AssertionError('Remote removal failed')
