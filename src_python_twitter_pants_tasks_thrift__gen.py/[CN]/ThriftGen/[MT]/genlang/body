def genlang(self, lang, targets):
    (bases, sources) = self._calculate_sources(targets)
    if (lang == 'java'):
        gen = self.gen_java.gen
    elif (lang == 'python'):
        gen = self.gen_python.gen
    else:
        raise TaskError(('Unrecognized thrift gen lang: %s' % lang))
    safe_mkdir(self.output_dir)
    args = [self.thrift_binary, '--gen', gen, '-recurse', '-o', self.output_dir]
    if self.strict:
        args.append('-strict')
    if self.verbose:
        args.append('-verbose')
    for base in bases:
        args.extend(('-I', base))
    processes = []
    for source in sources:
        cmd = args[:]
        cmd.append(source)
        log.debug(('Executing: %s' % ' '.join(cmd)))
        processes.append(subprocess.Popen(cmd))
    if (sum((p.wait() for p in processes)) != 0):
        raise TaskError
