def mapjars(self, genmap, target, executor, workunit_factory=None):
    '\n    Parameters:\n      genmap: the jar_dependencies ProductMapping entry for the required products.\n      target: the target whose jar dependencies are being retrieved.\n    '
    mapdir = os.path.join(self._mapto_dir(), target.id)
    safe_mkdir(mapdir, clean=True)
    ivyargs = ['-retrieve', ('%s/[organisation]/[artifact]/[conf]/[organisation]-[artifact]-[revision](-[classifier]).[ext]' % mapdir), '-symlink', '-confs']
    ivyargs.extend((target.configurations or self._confs))
    self.exec_ivy(mapdir, [target], ivyargs, ivy=Bootstrapper.default_ivy(executor), workunit_factory=workunit_factory, workunit_name='map-jars')
    for org in os.listdir(mapdir):
        orgdir = os.path.join(mapdir, org)
        if os.path.isdir(orgdir):
            for name in os.listdir(orgdir):
                artifactdir = os.path.join(orgdir, name)
                if os.path.isdir(artifactdir):
                    for conf in os.listdir(artifactdir):
                        confdir = os.path.join(artifactdir, conf)
                        for f in os.listdir(confdir):
                            if self.is_mappable_artifact(f):
                                genmap.add(org, confdir).append(f)
                                genmap.add((org, name), confdir).append(f)
                                genmap.add(target, confdir).append(f)
                                genmap.add((target, conf), confdir).append(f)
                                genmap.add((org, name, conf), confdir).append(f)
