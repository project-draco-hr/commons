def exec_ivy(self, target_workdir, targets, args, runjava=None, workunit_name='ivy', workunit_factory=None, ivy_classpath=None):
    ivy_classpath = (ivy_classpath if ivy_classpath else self._config.getlist('ivy', 'classpath'))
    runjava = (runjava or binary_util.runjava_indivisible)
    ivyxml = os.path.join(target_workdir, 'ivy.xml')
    (jars, excludes) = self._calculate_classpath(targets)
    self._generate_ivy(targets, jars, excludes, ivyxml)
    ivy_opts = ['-settings', self._ivy_settings, '-cache', self._cachedir, '-ivy', ivyxml]
    ivy_opts.extend(args)
    if (not self._transitive):
        ivy_opts.append('-notransitive')
    ivy_opts.extend(self._opts)
    ivy_opts.extend(self._ivy_args)
    runjava_args = dict(main='org.apache.ivy.Main', opts=ivy_opts, workunit_name=workunit_name, classpath=ivy_classpath, workunit_factory=workunit_factory)
    result = runjava(**runjava_args)
    if (result != 0):
        raise TaskError(('org.apache.ivy.Main returned %d' % result))
