{
  final ZooKeeperClient zkClient=createZkClient();
  shutdownNetwork();
  final CountDownLatch blockingGetComplete=new CountDownLatch(1);
  final AtomicBoolean interrupted=new AtomicBoolean();
  final AtomicReference<ZooKeeper> client=new AtomicReference<ZooKeeper>();
  Thread getThread=new Thread(new Runnable(){
    @Override public void run(){
      try {
        client.set(zkClient.get());
      }
 catch (      ZooKeeperConnectionException e) {
        throw new RuntimeException(e);
      }
catch (      InterruptedException e) {
        interrupted.set(true);
        throw new RuntimeException(e);
      }
 finally {
        blockingGetComplete.countDown();
      }
    }
  }
);
  getThread.start();
  while (zkClient.getZooKeeperClientForTests() == null) {
    Thread.sleep(100);
  }
  getThread.interrupt();
  blockingGetComplete.await();
  assertNull("The zk connection should have been closed",zkClient.getZooKeeperClientForTests());
  assertTrue("The waiter thread should have been interrupted",interrupted.get());
  assertTrue(zkClient.isClosed());
}
