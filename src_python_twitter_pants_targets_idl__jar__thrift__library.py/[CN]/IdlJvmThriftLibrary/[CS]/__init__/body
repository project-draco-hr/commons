def __init__(self, name, thrift_jar, language, excludes=None, rpc_style=_RPC_STYLE_DEFAULT, provided_by=None):
    "\n    :param string name: The name of this target, which combined with this\n      build file defines the target :class:`twitter.pants.base.address.Address`.\n    :param thrift_jar: A :class:`twitter.pants.targets.thrift_library.ThriftJar` that contains\n      the IDL files this target will generate sources from.\n    :param excludes: List of :class:`twitter.pants.targets.exclude.Exclude` instances\n      to filter this target's transitive dependencies against.\n    :param language: The language used to generate the output files.\n      One of 'java' or 'scala'.\n    :param rpc_style: An optional rpc style to generate service stubs with.\n      One of 'sync', 'finagle' or 'ostrich' with a default of 'sync'.\n    :param provided_by: Published classfile jar if not default pants name.\n    "
    JavaThriftLibrary.__init__(self, name=name, sources=[], provides=None, dependencies=[thrift_jar], excludes=excludes, language=language, rpc_style=rpc_style, compiler='scrooge')
    self.idl_jar = thrift_jar
    if (not isinstance(thrift_jar, ThriftJar)):
        raise TargetDefinitionException(self, ('thrift_jar must be a ThriftJar instance, but was %s' % thrift_jar))
    provided_name = re.sub('-only$', '', thrift_jar.name)
    self.provided_by = (provided_by or JarDependency(org=thrift_jar.org, name=provided_name, rev=thrift_jar.rev).intransitive())
    if (not isinstance(self.provided_by, JarDependency)):
        raise TargetDefinitionException(self, ('provided_by for target must be a JarDependency: %s' % self.provided_by))
