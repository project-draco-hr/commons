def validate_import(self, node):
    errors = []
    if (not isinstance(node, (ast.Import, ast.ImportFrom))):
        raise TypeError('validate_import only operates on ast.Import and ast.ImportFrom types.')
    if isinstance(node, ast.ImportFrom):
        if ((len(node.names) == 1) and (node.names[0].name == '*')):
            errors.append(ASTStyleError(self.python_file, node, 'Wildcard imports are not allowed.'))
        names = [alias.name.lower() for alias in node.names]
        if (names != sorted(names)):
            errors.append(ASTStyleError(self.python_file, node, 'From import must import names in lexical order.'))
    if isinstance(node, ast.Import):
        if (len(node.names) > 1):
            errors.append(ASTStyleError(self.python_file, node, 'Absolute import statements should only import one module at a time.'))
    return (node, errors)
