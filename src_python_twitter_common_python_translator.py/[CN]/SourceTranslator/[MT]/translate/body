def translate(self, link):
    'From a link, translate a distribution.'
    if (not isinstance(link, SourceLink)):
        return None
    (unpack_path, installer) = (None, None)
    version = self._interpreter.version
    try:
        unpack_path = link.fetch(conn_timeout=self._conn_timeout)
        if (self._use_2to3 and (version >= (3,))):
            with TRACER.timed(('Translating 2->3 %s' % link.name)):
                self.run_2to3(unpack_path)
        with TRACER.timed(('Installing %s' % link.name)):
            installer = Installer(unpack_path, interpreter=self._interpreter, strict=(link.name != 'distribute'))
        with TRACER.timed(('Distilling %s' % link.name)):
            try:
                dist = installer.distribution()
            except Installer.InstallFailure:
                return None
            dist = dist_from_egg(Distiller(dist).distill(into=self._install_cache))
            if Platform.distribution_compatible(dist, python=self._interpreter.python, platform=self._platform):
                return dist
    finally:
        if installer:
            installer.cleanup()
        if unpack_path:
            safe_rmtree(unpack_path)
