def _is_conflicts(self, jar_paths, binary_target):
    artifacts_by_file_name = defaultdict(set)
    for jarpath in jar_paths:
        self.context.log.debug(('  scanning %s' % jarpath))
        with closing(ZipFile(jarpath)) as zip:
            for file_name in zip.namelist():
                jar_name = os.path.basename(jarpath)
                if ((not self._isdir(file_name)) and (Manifest.PATH != file_name)):
                    artifacts_by_file_name[file_name].add(jar_name)
            zip.close()
    conflicts_by_artifacts = self._get_conflicts_by_artifacts(artifacts_by_file_name)
    if (len(conflicts_by_artifacts) > 0):
        self._log_conflicts(conflicts_by_artifacts, binary_target)
        if self.fail_fast:
            raise TaskError(('Failing build for target %s.' % binary_target))
        return True
    return False
