def fingerprint(self, target, fingerprint_internal):
    sha = hashlib.sha1()
    for source in sorted(target.sources):
        path = os.path.join(target.target_base, source)
        with open(path) as fd:
            sha.update(source)
            sha.update(fd.read())
    for jarsig in sorted([jar_coordinate(j) for j in target.jar_dependencies if j.rev]):
        sha.update(jarsig)
    internal_dependencies = sorted(target.internal_dependencies, key=(lambda t: t.id))
    for internal_target in internal_dependencies:
        fingerprint = fingerprint_internal(internal_target)
        sha.update(fingerprint)
    return sha.hexdigest()
