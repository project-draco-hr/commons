def __init__(self, context):
    IdeGen.__init__(self, context)
    self.intellij_output_dir = os.path.join(self.work_dir, 'out')
    self.nomerge = (not context.options.idea_gen_merge)
    self.open = context.options.idea_gen_open
    self.bash = context.options.idea_gen_bash
    self.scala_language_level = _SCALA_VERSIONS.get(context.options.idea_scala_language_level, None)
    self.scala_maximum_heap_size = (context.options.idea_gen_scala_maximum_heap_size or context.config.getint('idea', 'scala_maximum_heap_size_mb', default=512))
    self.fsc = context.options.idea_gen_fsc
    self.java_encoding = context.options.idea_gen_java_encoding
    self.java_maximum_heap_size = (context.options.idea_gen_java_maximum_heap_size or context.config.getint('idea', 'java_maximum_heap_size_mb', default=128))
    idea_version = _VERSIONS[context.options.idea_gen_version]
    self.project_template = os.path.join(_TEMPLATE_BASEDIR, ('project-%s.mustache' % idea_version))
    self.module_template = os.path.join(_TEMPLATE_BASEDIR, ('module-%s.mustache' % idea_version))
    self.project_filename = os.path.join(self.cwd, ('%s.ipr' % self.project_name))
    self.module_filename = os.path.join(self.work_dir, ('%s.iml' % self.project_name))
