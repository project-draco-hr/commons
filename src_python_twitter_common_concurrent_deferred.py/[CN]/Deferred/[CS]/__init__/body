def __init__(self, closure, delay=Amount(0, Time.SECONDS), clock=time):
    super(Deferred, self).__init__()
    self._closure = closure
    if isinstance(delay, Compatibility.numeric):
        self._delay = delay
    elif (isinstance(delay, Amount) and isinstance(delay.unit(), Time)):
        self._delay = delay.as_(Time.SECONDS)
    else:
        raise ValueError('Deferred must take a numeric or Amount of Time.')
    self._clock = clock
    self._initialized = clock.time()
    self.daemon = True
