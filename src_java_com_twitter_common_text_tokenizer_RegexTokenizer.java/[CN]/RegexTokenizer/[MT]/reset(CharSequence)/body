{
  termAttr.setCharSequence(input);
  tokens=Lists.newArrayList();
  tokenTypes=Lists.newArrayList();
  Matcher matcher=delimiterPattern.matcher(input);
  int lastMatch=0;
  while (matcher.find()) {
    if (matcher.start() != lastMatch) {
      tokens.add(CharBuffer.wrap(input,lastMatch,matcher.start()));
      tokenTypes.add(TokenType.TOKEN);
    }
    if (keepPunctuation && matcher.start(punctuationGroup) >= 0) {
      tokens.add(CharBuffer.wrap(input,matcher.start(punctuationGroup),matcher.end(punctuationGroup)));
      tokenTypes.add(TokenType.PUNCTUATION);
    }
    lastMatch=matcher.end();
  }
  if (lastMatch < input.length()) {
    tokens.add(CharBuffer.wrap(input,lastMatch,input.length()));
    tokenTypes.add(TokenType.TOKEN);
  }
  tokenIndex=0;
}
