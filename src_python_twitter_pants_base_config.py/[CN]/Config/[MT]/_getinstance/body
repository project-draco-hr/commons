def _getinstance(self, section, option, type, default=None):
    if (not self.configparser.has_option(section, option)):
        return default
    raw_value = self.configparser.get(section, option)
    if issubclass(type, str):
        return raw_value
    try:
        parsed_value = eval(raw_value, {}, {})
    except SyntaxError as e:
        raise Config.ConfigError(('No valid %s for %s.%s: %s\n%s' % (type.__name__, section, option, raw_value, e)))
    if (not isinstance(parsed_value, type)):
        raise Config.ConfigError(('No valid %s for %s.%s: %s' % (type.__name__, section, option, raw_value)))
    return parsed_value
