def jar(self, jvm_targets, genmap, add_genjar):
    for target in jvm_targets:
        generated = genmap.get(target)
        if (generated or target.has_resources):
            jar_name = ('%s.jar' % jarname(target))
            add_genjar(target, jar_name)
            jar_path = os.path.join(self._output_dir, jar_name)
            with self.create_jar(target, jar_path) as jarfile:
                if generated:
                    for (basedir, classfiles) in generated.items():
                        for classfile in classfiles:
                            jarfile.write(os.path.join(basedir, classfile), classfile)
                if target.has_resources:
                    resources_genmap = self.context.products.get('resources')
                    if resources_genmap:
                        for resources in target.resources:
                            resource_map = resources_genmap.get(resources)
                            if resource_map:
                                for (basedir, files) in resource_map.items():
                                    for resource in files:
                                        jarfile.write(os.path.join(basedir, resource), resource)
