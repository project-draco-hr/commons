def create_javadoc_command(classpath, gendir, *targets):
    sources = []
    for target in targets:
        sources.extend((os.path.join(target.target_base, source) for source in target.sources))
    if (not sources):
        return None
    command = ['javadoc', '-quiet', '-encoding', 'UTF-8', '-notimestamp', '-use', '-classpath', ':'.join(classpath), '-d', gendir]
    offlinelinks = set(['http://download.oracle.com/javase/6/docs/api/'])

    def link(target):
        for jar in target.jar_dependencies:
            if jar.apidocs:
                offlinelinks.add(jar.apidocs)
    for target in targets:
        target.walk(link, (lambda t: t.is_jvm))
    for link in offlinelinks:
        command.extend(['-linkoffline', link, link])
    command.extend(sources)
    return command
