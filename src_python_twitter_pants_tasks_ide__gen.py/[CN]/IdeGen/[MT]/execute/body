def execute(self, targets):
    'Stages IDE project artifacts to a project directory and generates IDE configuration files.'
    checkstyle_enabled = (len(Phase.goals_of_type(Checkstyle)) > 0)
    if checkstyle_enabled:
        checkstyle_classpath = self._jvm_tool_bootstrapper.get_jvm_tool_classpath(self.checkstyle_bootstrap_key)
    else:
        checkstyle_classpath = []
    if self.scalac_bootstrap_key:
        scalac_classpath = self._jvm_tool_bootstrapper.get_jvm_tool_classpath(self.scalac_bootstrap_key)
    else:
        scalac_classpath = []
    self._project.set_tool_classpaths(checkstyle_classpath, scalac_classpath)
    self.map_internal_jars(targets)
    self.map_external_jars()
    idefile = self.generate_project(self._project)
    if idefile:
        binary_util.ui_open(idefile)
