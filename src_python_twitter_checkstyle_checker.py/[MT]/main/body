def main(args, options):
    plugins = list_plugins()
    plugin_map = dict(((plugin.__name__, plugin) for plugin in plugins))
    if options.plugins:
        plugins = filter(None, (plugin_map.get(plugin_name) for plugin_name in options.plugins))
        for plugin in plugins:
            print(('Selected %s' % plugin.__name__))
    if options.diff:
        iterator = git_iterator(args, options)
    else:
        iterator = path_iterator(args, options)
    severity = Nit.COMMENT
    for (number, name) in Nit.SEVERITY.items():
        if (name == options.severity):
            severity = number
    should_fail = False
    for (filename, line_filter) in iterator:
        try:
            python_file = PythonFile.parse(filename)
        except SyntaxError as e:
            print(('%s:SyntaxError: %s' % (filename, e)))
            continue
        for checker in plugins:
            for nit in checker(python_file, line_filter):
                if (nit.severity >= severity):
                    print(nit)
                    print()
                should_fail |= ((nit.severity >= Nit.ERROR) or ((nit.severity >= Nit.WARNING) and options.strict))
    return int(should_fail)
