def __init__(self, read_artifact_cache, write_artifact_cache):
    "Either cache can be None, in which case we don't read from/write to it."
    artifact_roots = []
    logs = []

    def get_root_and_log(cache):
        if (cache is not None):
            artifact_roots.append(cache.artifact_root)
            logs.append(cache.log)
    get_root_and_log(read_artifact_cache)
    get_root_and_log(write_artifact_cache)
    if (len(artifact_roots) == 0):
        artifact_root = None
        log = None
    else:
        artifact_root = artifact_roots[0]
        log = logs[0]
        if ((len(artifact_roots) > 1) and (artifact_roots[1] != artifact_root)):
            raise ValueError('Read and write artifact caches must have the same artifact root.')
    ArtifactCache.__init__(self, log, artifact_root)
    self._read_artifact_cache = read_artifact_cache
    self._write_artifact_cache = write_artifact_cache
