def setUp(self):
    self.base_dir = tempfile.mkdtemp()

    def generate_path(name):
        return os.path.join(self.base_dir, name)
    test_class_path = generate_path('com/twitter/Test.class')
    duplicate_class_path = generate_path('com/twitter/commons/Duplicate.class')
    unique_class_path = generate_path('org/apache/Unique.class')
    touch(test_class_path)
    touch(duplicate_class_path)
    touch(unique_class_path)

    def generate_jar(path, *class_name):
        with closing(ZipFile(generate_path(path), 'w')) as zipfile:
            for clazz in class_name:
                zipfile.write(clazz)
            return zipfile.filename

    @contextmanager
    def jars():
        test_jar = generate_jar('test.jar', test_class_path, duplicate_class_path)
        jar_with_duplicates = generate_jar('dups.jar', duplicate_class_path, unique_class_path)
        jar_without_duplicates = generate_jar('no_dups.jar', unique_class_path)
        jars = []
        jars.append(test_jar)
        jars.append(jar_with_duplicates)
        jars.append(jar_without_duplicates)
        yield jars
    with jars() as jars:
        self.path_with_duplicates = [jars[0], jars[1]]
        self.path_without_duplicates = [jars[0], jars[2]]
