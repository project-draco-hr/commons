{
  MorePreconditions.checkNotBlank(name);
  Preconditions.checkArgument(numSampleWindows >= 1,"Must have one or more sample windows.");
  Preconditions.checkNotNull(percentiles);
  Preconditions.checkArgument(percentiles.length > 0,"Must specify at least one percentile.");
  this.sampler=sampler;
  sampleQueue=new LinkedBlockingDeque<ArrayList<T>>(numSampleWindows);
  ImmutableMap.Builder<Double,SampledStat<Double>> builder=new ImmutableMap.Builder<Double,SampledStat<Double>>();
  for (int i=0; i < percentiles.length; i++) {
    boolean sortFirst=i == 0;
    String statName=String.format("%s_%s_percentile",name,percentiles[i]).replace('.','_');
    SampledStat<Double> stat=new PercentileVar(statName,percentiles[i],sortFirst);
    Stats.export(stat);
    builder.put(percentiles[i],stat);
  }
  statsByPercentile=builder.build();
}
