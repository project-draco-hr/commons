def test_base_object(self):
    types = (Blob, Tree, Commit, TagObject)
    assert (len(types) == len(self.type_tuples))
    s = set()
    num_objs = 0
    num_index_objs = 0
    for (obj_type, (typename, hexsha, path)) in zip(types, self.type_tuples):
        binsha = hex_to_bin(hexsha)
        item = None
        if (path is None):
            item = obj_type(self.rorepo, binsha)
        else:
            item = obj_type(self.rorepo, binsha, 0, path)
        num_objs += 1
        assert (item.hexsha == hexsha)
        assert (item.type == typename)
        assert item.size
        assert (item == item)
        assert (not (item != item))
        assert (str(item) == item.hexsha)
        assert repr(item)
        s.add(item)
        if isinstance(item, base.IndexObject):
            num_index_objs += 1
            if hasattr(item, 'path'):
                assert (not item.path.startswith('/'))
                assert isinstance(item.mode, int)
        data_stream = item.data_stream
        data = data_stream.read()
        assert data
        tmpfile = os.tmpfile()
        assert (item == item.stream_data(tmpfile))
        tmpfile.seek(0)
        assert (tmpfile.read() == data)
    assert (len(s) == num_objs)
    assert (len((s | s)) == num_objs)
    assert (num_index_objs == 2)
