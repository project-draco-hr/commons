@classmethod
def entry_at(cls, filepath, index):
    ":return: RefLogEntry at the given index\n\t\t:param filepath: full path to the index file from which to read the entry\n\t\t:param index: python list compatible index, i.e. it may be negative to \n\t\t\tspecifiy an entry counted from the end of the list\n\t\t\t\n\t\t:raise IndexError: If the entry didn't exist\n\t\t\n\t\t.. note:: This method is faster as it only parses the entry at index, skipping\n\t\t\tall other lines. Nonetheless, the whole file has to be read if \n\t\t\tthe index is negative\n\t\t"
    fp = open(filepath, 'rb')
    if (index < 0):
        return RefLogEntry.from_line(fp.readlines()[index].strip())
    else:
        for i in xrange((index + 1)):
            line = fp.readline()
            if (not line):
                break
        if ((i != index) or (not line)):
            raise IndexError
        return RefLogEntry.from_line(line.strip())
