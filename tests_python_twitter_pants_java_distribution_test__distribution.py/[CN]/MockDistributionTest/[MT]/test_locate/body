def test_locate(self):

    @contextmanager
    def env(**kwargs):
        environment = dict(JDK_HOME=None, JAVA_HOME=None, PATH=None)
        environment.update(**kwargs)
        with environment_as(**environment):
            yield
    with pytest.raises(Distribution.Error):
        with env():
            Distribution.locate()
    with pytest.raises(Distribution.Error):
        with self.distribution(files='java') as jdk:
            with env(PATH=jdk):
                Distribution.locate()
    with pytest.raises(Distribution.Error):
        with self.distribution(executables=self.exe('java')) as jdk:
            with env(PATH=jdk):
                Distribution.locate(jdk=True)
    with pytest.raises(Distribution.Error):
        with self.distribution(executables=self.exe('java', '1.6.0')) as jdk:
            with env(PATH=jdk):
                Distribution.locate(minimum_version='1.7.0')
    with pytest.raises(Distribution.Error):
        with self.distribution(executables=self.exe('java')) as jdk:
            with env(JDK_HOME=jdk):
                Distribution.locate()
    with pytest.raises(Distribution.Error):
        with self.distribution(executables=self.exe('java')) as jdk:
            with env(JAVA_HOME=jdk):
                Distribution.locate()
    with self.distribution(executables=self.exe('java')) as jdk:
        with env(PATH=jdk):
            Distribution.locate()
    with self.distribution(executables=[self.exe('java'), self.exe('javac')]) as jdk:
        with env(PATH=jdk):
            Distribution.locate(jdk=True)
    with self.distribution(executables=self.exe('java', '1.7.0')) as jdk:
        with env(PATH=jdk):
            Distribution.locate(minimum_version='1.6.0')
    with self.distribution(executables=self.exe('bin/java')) as jdk:
        with env(JDK_HOME=jdk):
            Distribution.locate()
    with self.distribution(executables=self.exe('bin/java')) as jdk:
        with env(JAVA_HOME=jdk):
            Distribution.locate()
