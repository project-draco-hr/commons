def _tail_lines(fd, linesback=10):
    if (fd is None):
        return
    avgcharsperline = 75
    while True:
        try:
            fd.seek((((-1) * avgcharsperline) * linesback), 2)
        except IOError:
            fd.seek(0)
        if (fd.tell() == 0):
            atstart = 1
        else:
            atstart = 0
        lines = fd.read().splitlines()
        if ((len(lines) > (linesback + 1)) or atstart):
            break
        avgcharsperline = (avgcharsperline * 1.3)
    if (len(lines) > linesback):
        start = ((len(lines) - linesback) - 1)
    else:
        start = 0
    return lines[start:(len(lines) - 1)]
