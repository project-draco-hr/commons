def _get_source(self, fullmodname):
    "Internal helper for load_module().\n\n    Args:\n      fullmodname: The dot-separated full module name, e.g. 'django.core.mail'.\n\n    Returns:\n      A tuple (submodname, is_package, fullpath, source) where:\n        submodname: The final component of the module name, e.g. 'mail'.\n        is_package: A bool indicating whether this is a package.\n        fullpath: The path to the module's source code including the\n          zipfile's filename.\n        source: The module's source code.\n\n    Raises:\n      ImportError if the module is not found in the archive.\n    "
    (submodname, is_package, relpath) = self._get_info(fullmodname)
    fullpath = ('%s%s%s' % (self.archive, os.sep, relpath))
    source = Nested.read(fullpath)
    assert (source is not None)
    if PY3:
        source = source.decode('utf8')
    source = source.replace('\r\n', '\n').replace('\r', '\n')
    return (submodname, is_package, fullpath, source)
