@staticmethod
def get(archive, provider=None, zipfile=None):
    "\n      Get a cached copy of the archive's zipfile if it's been cached. Otherwise\n      create a new zipfile and cache it.\n\n      archive: name of the archive (full path, may or may not be a file)\n      provider: a function that can provide a zipfile associated with 'archive' if we need\n                to construct one.\n      zipfile: the zipfile we're currently using.  if it differs from what is cached,\n               close and return the cached copy instead.\n    "
    if (archive in _zipfile_cache):
        if ((zipfile is not None) and (_zipfile_cache[archive] != zipfile)):
            zipfile.close()
        zf = _zipfile_cache[archive]
    else:
        if (zipfile is not None):
            zf = _zipfile_cache[archive] = zipfile
        else:
            assert (provider is not None)
            zf = _zipfile_cache[archive] = provider()
        _zipfile_namecache[archive] = set(zf.namelist())
    _zip_directory_cache[archive] = ZipFileCache(archive)
    return zf
