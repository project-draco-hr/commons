def _compute_sources_by_target(self, targets):

    def calculate_sources(target):
        sources = []
        srcs = [os.path.join(target.target_base, src) for src in target.sources if src.endswith('.scala')]
        sources.extend(srcs)
        if ((isinstance(target, ScalaLibrary) or isinstance(target, ScalaTests)) and target.java_sources):
            sources.extend(resolve_target_sources(target.java_sources, '.java'))
        return sources
    return dict([(t, calculate_sources(t)) for t in targets])
