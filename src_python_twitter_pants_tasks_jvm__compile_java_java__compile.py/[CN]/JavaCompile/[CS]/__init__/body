def __init__(self, context):
    super(JavaCompile, self).__init__(context, jdk=True)
    self._jmake_bootstrap_key = 'jmake'
    external_tools = context.config.getlist('java-compile', 'jmake-bootstrap-tools', default=[':jmake'])
    self.register_jvm_tool(self._jmake_bootstrap_key, external_tools)
    self._compiler_bootstrap_key = 'java-compiler'
    compiler_bootstrap_tools = context.config.getlist('java-compile', 'compiler-bootstrap-tools', default=[':java-compiler'])
    self.register_jvm_tool(self._compiler_bootstrap_key, compiler_bootstrap_tools)
    self._javac_opts = []
    if context.options.java_compile_args:
        for arg in context.options.java_compile_args:
            self._javac_opts.extend(shlex.split(arg))
    else:
        self._javac_opts.extend(context.config.getlist('java-compile', 'javac_args', default=[]))
