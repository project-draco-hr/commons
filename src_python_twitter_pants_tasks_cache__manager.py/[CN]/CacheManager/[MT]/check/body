def check(self, target):
    'Checks if a target has changed and invalidates it if so.\n\n    Returns a VersionedTargetSet for the target, regardless of whether it was invalidated or not.\n    '
    cache_key = self._key_for(target)
    if (cache_key and self._invalidator.needs_update(cache_key)):
        self._invalidate(target, cache_key)
        valid = False
    else:
        valid = True
    ret = VersionedTargetSet([target], cache_key, valid)
    return ret
