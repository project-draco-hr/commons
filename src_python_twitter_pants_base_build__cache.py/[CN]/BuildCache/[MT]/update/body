def update(self, cache_key, build_artifacts=None, artifact_root=None):
    'Cache the output of a build.\n\n    If the cache area contains an existing object with the same (path, source_sha) its path will\n    be returned. If no such object exists, builder will be called with a path inside the staging\n    area and should create a new object.\n\n    :param cache_key: A CacheKey object (typically returned by BuildCache.key_for().\n    :param build_artifacts: List of paths to generated artifacts under artifact_root.\n    :param artifact_root: Optional root directory under which artifacts are stored.\n    '
    safe_rmtree(cache_key.filename)
    for artifact in (build_artifacts or ()):
        rel_path = (os.path.basename(artifact) if (artifact_root is None) else os.path.relpath(artifact, artifact_root))
        assert (not rel_path.startswith('..'))
        artifact_dest = os.path.join(cache_key.filename, rel_path)
        dir_name = os.path.dirname(artifact_dest)
        if (not os.path.exists(dir_name)):
            os.makedirs(dir_name)
        if os.path.isdir(artifact):
            shutil.copytree(artifact, artifact_dest)
        else:
            shutil.copy(artifact, artifact_dest)
    self._write_sha(cache_key)
