{
  Multimap<JarSource,ReadableJarEntry> jarEntries=HashMultimap.create();
  for (  ReadableJarEntry entry : entries) {
    Preconditions.checkState(entry.getSource() instanceof JarSource);
    jarEntries.put((JarSource)entry.getSource(),entry);
  }
  for (  JarSource source : jarEntries.keySet()) {
    Closer jarFileCloser=Closer.create();
    try {
      final InputSupplier<JarFile> jarSupplier=jarFileCloser.register(new JarSupplier(new File(source.name())));
      JarFile jarFile=jarSupplier.getInput();
      for (      ReadableJarEntry readableJarEntry : jarEntries.get(source)) {
        JarEntry jarEntry=readableJarEntry.getJarEntry();
        String resource=jarEntry.getName();
        writer.copy(resource,jarFile,jarEntry);
      }
    }
 catch (    IOException ex) {
      throw jarFileCloser.rethrow(ex);
    }
 finally {
      jarFileCloser.close();
    }
  }
}
