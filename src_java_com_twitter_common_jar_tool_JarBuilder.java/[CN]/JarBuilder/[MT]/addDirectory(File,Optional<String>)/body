{
  Preconditions.checkArgument(directory.isDirectory(),"Expected a directory, given a file: %s",directory);
  Preconditions.checkArgument(!jarPath.isPresent() || StringUtils.isNotBlank(jarPath.get()));
  additions.add(new EntryIndexer(){
    @Override public void execute(    Multimap<String,ReadableEntry> entries) throws JarBuilderException {
      Source directorySource=directorySource(directory);
      Iterable<String> jarBasePath=jarPath.isPresent() ? JAR_PATH_SPLITTER.split(jarPath.get()) : ImmutableList.<String>of();
      Collection<File> files=org.apache.commons.io.FileUtils.listFiles(directory,null,true);
      for (      File child : files) {
        Iterable<String> relpathComponents=relpathComponents(child,directory);
        Iterable<String> path=Iterables.concat(jarBasePath,relpathComponents);
        String entryPath=JAR_PATH_JOINER.join(relpathComponents);
        if (!JarFile.MANIFEST_NAME.equals(entryPath)) {
          NamedInputSupplier<FileInputStream> contents=NamedInputSupplier.create(directorySource,entryPath,Files.newInputStreamSupplier(child));
          add(entries,contents,JAR_PATH_JOINER.join(path));
        }
      }
    }
  }
);
  return this;
}
