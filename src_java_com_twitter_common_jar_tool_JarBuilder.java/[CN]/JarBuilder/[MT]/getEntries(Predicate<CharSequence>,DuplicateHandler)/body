{
  Function<Map.Entry<String,Collection<ReadableEntry>>,Iterable<ReadableEntry>> mergeEntries=new Function<Map.Entry<String,Collection<ReadableEntry>>,Iterable<ReadableEntry>>(){
    @Override public Iterable<ReadableEntry> apply(    Map.Entry<String,Collection<ReadableEntry>> item){
      String jarPath=item.getKey();
      Collection<ReadableEntry> entries=item.getValue();
      return processEntries(skipPath,duplicateHandler,jarPath,entries).asSet();
    }
  }
;
  return FluentIterable.from(getAdditions().asMap().entrySet()).transformAndConcat(mergeEntries);
}
