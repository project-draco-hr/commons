def _call_process(self, method, *args, **kwargs):
    'Run the given git command with the specified arguments and return\n\t\tthe result as a String\n\n\t\t:param method:\n\t\t\tis the command. Contained "_" characters will be converted to dashes,\n\t\t\tsuch as in \'ls_files\' to call \'ls-files\'.\n\n\t\t:param args:\n\t\t\tis the list of arguments. If None is included, it will be pruned.\n\t\t\tThis allows your commands to call git more conveniently as None\n\t\t\tis realized as non-existent\n\n\t\t:param kwargs:\n\t\t\tis a dict of keyword arguments.\n\t\t\tThis function accepts the same optional keyword arguments\n\t\t\tas execute().\n\n\t\t``Examples``::\n\t\t\tgit.rev_list(\'master\', max_count=10, header=True)\n\n\t\t:return: Same as ``execute``'
    _kwargs = dict()
    for kwarg in execute_kwargs:
        try:
            _kwargs[kwarg] = kwargs.pop(kwarg)
        except KeyError:
            pass
    opt_args = self.transform_kwargs(**kwargs)
    ext_args = self.__unpack_args([a for a in args if (a is not None)])
    args = (opt_args + ext_args)
    call = ['git', dashify(method)]
    call.extend(args)
    return self.execute(call, **_kwargs)
