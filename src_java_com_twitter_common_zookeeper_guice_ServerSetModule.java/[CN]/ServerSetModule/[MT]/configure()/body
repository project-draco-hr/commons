{
  requireBinding(serverSetKey);
  requireBinding(ShutdownRegistry.class);
  requireBinding(LocalServiceRegistry.class);
  LifecycleModule.bindStartupAction(binder(),ServerSetJoiner.class);
  bind(new TypeLiteral<Supplier<EndpointStatus>>(){
  }
).to(EndpointSupplier.class);
  bind(EndpointSupplier.class).in(Singleton.class);
  Optional<String> primaryPortName;
  if (AUX_PORT_AS_PRIMARY.hasAppliedValue()) {
    primaryPortName=Optional.of(AUX_PORT_AS_PRIMARY.get());
  }
 else {
    primaryPortName=auxPortAsPrimary;
  }
  bind(new TypeLiteral<Optional<String>>(){
  }
).annotatedWith(Default.class).toInstance(primaryPortName);
  bind(JOINABLE_SS).to(serverSetKey);
}
