def execute(self, targets):
    context = self.context
    if context.products.is_required_data('jvm_build_tools_classpath_callbacks'):
        tool_product_map = (context.products.get_data('jvm_build_tools') or {})
        callback_product_map = (context.products.get_data('jvm_build_tools_classpath_callbacks') or {})
        for (key, deplist) in tool_product_map.iteritems():
            callback_product_map[key] = self.cached_bootstrap_classpath_callback(key, deplist)
        context.products.safe_create_data('jvm_build_tools_classpath_callbacks', (lambda : callback_product_map))
