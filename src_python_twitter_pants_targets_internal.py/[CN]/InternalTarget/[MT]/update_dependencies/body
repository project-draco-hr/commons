def update_dependencies(self, dependencies):
    if dependencies:
        for dependency in dependencies:
            if hasattr(dependency, 'address'):
                self.dependency_addresses.add(dependency.address)
            if (not hasattr(dependency, 'resolve')):
                raise TargetDefinitionException(self, ('Cannot add %s as a dependency of %s' % (dependency, self)))
            for resolved_dependency in dependency.resolve():
                if (resolved_dependency.is_concrete and (not self.valid_dependency(resolved_dependency))):
                    raise TargetDefinitionException(self, ('Cannot add %s as a dependency of %s' % (resolved_dependency, self)))
                self._dependencies.add(resolved_dependency)
                if isinstance(resolved_dependency, InternalTarget):
                    self._internal_dependencies.add(resolved_dependency)
        self._jar_dependencies = OrderedSet(filter((lambda tgt: isinstance(tgt, JarDependency)), (self._dependencies - self._internal_dependencies)))
