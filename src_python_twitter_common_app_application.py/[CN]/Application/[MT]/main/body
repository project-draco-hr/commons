def main(self):
    "\n      If called from __main__ module, run script's main() method with arguments passed\n      and global options parsed.\n\n      The following patterns are acceptable for the main method:\n         main()\n         main(args)\n         main(args, options)\n    "
    if (not self._validate_main_module()):
        return
    if (not self._import_module('twitter.common.app.modules')):
        print('Unable to import twitter app modules!', file=sys.stderr)
        self._exit_function(1)
        return
    self.init()
    if self._option_values.twitter_common_app_rc_filename:
        print(('RC filename: %s' % self._rc_filename()))
        return
    main_method = self._get_main_method()
    if (main_method is None):
        self._exit_function(1)
        return
    try:
        argspec = inspect.getargspec(main_method)
    except TypeError as e:
        print(('Malformed main(): %s' % e), file=sys.stderr)
        self._exit_function(1)
        return
    if (len(argspec.args) == 1):
        args = [self._argv]
    elif (len(argspec.args) == 2):
        args = [self._argv, self._option_values]
    else:
        if (len(self._argv) != 0):
            print(('main() takes no arguments but got leftover arguments: %s!' % ' '.join(self._argv)), file=sys.stderr)
            self._exit_function(1)
            return
        args = []
    return_code = self._run_main(main_method, *args)
    self._run_shutdown_commands(return_code)
    self._run_module_teardown()
    self.quit(return_code)
