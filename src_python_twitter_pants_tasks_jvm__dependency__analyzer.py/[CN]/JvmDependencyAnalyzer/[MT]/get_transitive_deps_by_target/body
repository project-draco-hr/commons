def get_transitive_deps_by_target(self):
    'Compute the transitive_deps_by_target mapping from all targets in-play for this pants run.\n\n    Memoizes for efficiency. Should only be called after codegen, so that all synthetic targets\n    and injected deps are taken into account.\n    '
    if (self._transitive_deps_by_target is not None):
        return self._transitive_deps_by_target
    sorted_targets = reversed(InternalTarget.sort_targets(self._context.targets()))
    transitive_deps_by_target = defaultdict(set)
    for target in sorted_targets:
        transitive_deps = set()
        if hasattr(target, 'dependencies'):
            for dep in target.dependencies:
                transitive_deps.update(transitive_deps_by_target.get(dep, []))
                transitive_deps.add(dep)
            transitive_deps_by_target[target] = transitive_deps
    self._transitive_deps_by_target = transitive_deps_by_target
    return self._transitive_deps_by_target
