{
  expect(timeSeriesRepo.getTimestamps()).andReturn(TIMESTAMPS);
  expect(timeSeriesRepo.get(TIME_SERIES_1)).andReturn(TS_DATA.get(TIME_SERIES_1));
  expect(timeSeriesRepo.get(TIME_SERIES_2)).andReturn(TS_DATA.get(TIME_SERIES_2));
  control.replay();
  String colString=Joiner.on(',').join(Arrays.asList(TIME_SERIES_1,TIME_SERIES_2,TIME_COLUMN));
  ResponseStruct response=gson.fromJson(dataSource.getResponse(colString,"2"),ResponseStruct.class);
  Iterable<List<Number>> expectedData=Iterables2.zip(0,TIMESTAMPS,getSamples(TIME_SERIES_1),getSamples(TIME_SERIES_2));
  expectedData=Iterables.filter(expectedData,new Predicate<List<Number>>(){
    @Override public boolean apply(    List<Number> row){
      return row.get(0).intValue() >= 3;
    }
  }
);
  checkRows(expectedData,response.data);
}
