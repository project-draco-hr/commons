def test_parse_date(self):

    def assert_rval(rval, veri_time, offset=0):
        assert (len(rval) == 2)
        assert (isinstance(rval[0], int) and isinstance(rval[1], int))
        assert (rval[0] == veri_time)
        assert (rval[1] == offset)
        utctz = altz_to_utctz_str(offset)
        assert isinstance(utctz, basestring)
        assert (utctz_to_altz(verify_utctz(utctz)) == offset)
    rfc = ('Thu, 07 Apr 2005 22:13:11 +0000', 0)
    iso = ('2005-04-07T22:13:11 -0200', 7200)
    iso2 = ('2005-04-07 22:13:11 +0400', (-14400))
    iso3 = ('2005.04.07 22:13:11 -0000', 0)
    alt = ('04/07/2005 22:13:11', 0)
    alt2 = ('07.04.2005 22:13:11', 0)
    veri_time = 1112904791
    for (date, offset) in (rfc, iso, iso2, iso3, alt, alt2):
        assert_rval(parse_date(date), veri_time, offset)
    self.failUnlessRaises(ValueError, parse_date, 'invalid format')
    self.failUnlessRaises(ValueError, parse_date, '123456789 -02000')
    self.failUnlessRaises(ValueError, parse_date, ' 123456789 -0200')
