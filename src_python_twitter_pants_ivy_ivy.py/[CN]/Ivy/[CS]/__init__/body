def __init__(self, classpath, java_executor=None, ivy_settings=None, ivy_cache_dir=None):
    'Configures an ivy wrapper for the ivy distribution at the given classpath.'
    self._classpath = maybe_list(classpath)
    self._java = (java_executor or SubprocessExecutor())
    if (not isinstance(self._java, Executor)):
        raise ValueError(('java_executor must be an Executor instance, given %s of type %s' % (self._java, type(self._java))))
    self._ivy_settings = ivy_settings
    if (self._ivy_settings and (not isinstance(self._ivy_settings, Compatibility.string))):
        raise ValueError(('ivy_settings must be a string, given %s of type %s' % (self._ivy_settings, type(self._ivy_settings))))
    self._ivy_cache_dir = ivy_cache_dir
    if (self._ivy_cache_dir and (not isinstance(self._ivy_cache_dir, Compatibility.string))):
        raise ValueError(('ivy_cache_dir must be a string, given %s of type %s' % (self._ivy_cache_dir, type(self._ivy_cache_dir))))
