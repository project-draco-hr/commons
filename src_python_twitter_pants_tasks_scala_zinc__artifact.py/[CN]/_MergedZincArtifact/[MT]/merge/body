def merge(self, force=False):
    'Actually combines the underlying artifacts into a single merged one.\n\n    Creates a single merged analysis file and a single merged classes dir.\n    '
    if (len(self.underlying_artifacts) <= 1):
        return self.current_state()
    if ((not force) and os.path.exists(self.analysis_file) and os.path.exists(self.classes_dir)):
        return self.current_state()
    with self.factory.context.new_workunit(name='merge'):
        if (force or (not os.path.exists(self.analysis_file))):
            with self.factory.context.new_workunit(name='analysis'):
                self._merge_analysis()
        current_state = self.current_state()
        if (force or (not os.path.exists(self.classes_dir))):
            with self.factory.context.new_workunit(name='classes'):
                self._merge_classes_dir(current_state)
    return current_state
