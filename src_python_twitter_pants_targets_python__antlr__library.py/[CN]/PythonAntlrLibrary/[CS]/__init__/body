def __init__(self, name, module, antlr_version='3.1.3', sources=None, resources=None, dependencies=None):
    '\n      name = Name of library\n      package = Python package to generate the parser in (there is no directive for this in ANTLR)\n      sources = antlr source files\n      resources = non-Python resources, e.g. templates, keys, other data (it is\n        recommended that your application uses the pkgutil package to access these\n        resources in a .zip-module friendly way.)\n      dependencies = other PythonLibraries, Eggs or internal Pants targets\n    '

    def get_all_deps():
        all_deps = OrderedSet()
        all_deps.update(Pants(('3rdparty/python:antlr-%s' % antlr_version)).resolve())
        if dependencies:
            all_deps.update(dependencies)
        return all_deps
    PythonTarget.__init__(self, None, name, sources, resources, get_all_deps(), False)
    self.module = module
    self.antlr_version = antlr_version
