def __parse(self, lines):
    ' Parse a list of lines and create\n        an internal property dictionary '
    lineno = 0
    i = iter(lines)
    for line in i:
        lineno += 1
        line = line.strip()
        if (not line):
            continue
        if (line[0] == '#'):
            continue
        escaped = False
        sepidx = (-1)
        flag = 0
        m = self.othercharre.search(line)
        if m:
            (first, last) = m.span()
            (start, end) = (0, first)
            flag = 1
            wspacere = re.compile('(?<![\\\\\\=\\:])(\\s)')
        else:
            if self.othercharre2.search(line):
                wspacere = re.compile('(?<![\\\\])(\\s)')
            (start, end) = (0, len(line))
        m2 = wspacere.search(line, start, end)
        if m2:
            (first, last) = m2.span()
            sepidx = first
        elif m:
            (first, last) = m.span()
            sepidx = (last - 1)
        while (line[(-1)] == '\\'):
            nextline = i.next()
            nextline = nextline.strip()
            lineno += 1
            line = (line[:(-1)] + nextline)
        if (sepidx != (-1)):
            (key, value) = (line[:sepidx], line[(sepidx + 1):])
        else:
            (key, value) = (line, '')
        self.processPair(key, value)
