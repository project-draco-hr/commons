def __init__(self, name, sources=None, dependencies=None, excludes=None, resources=None, buildflags=None, exclusives=None):
    "\n   :param string name: The name of this target, which combined with this\n     build file defines the target :class:`twitter.pants.base.address.Address`.\n   :param sources: A list of filenames representing the source code\n     this library is compiled from.\n   :type sources: list of strings\n   :param Artifact provides:\n     The :class:`twitter.pants.targets.artifact.Artifact`\n     to publish that represents this target outside the repo.\n   :param dependencies: List of :class:`twitter.pants.base.target.Target` instances\n     this target depends on.\n   :type dependencies: list of targets\n   :param excludes: List of :class:`twitter.pants.targets.exclude.Exclude` instances\n     to filter this target's transitive dependencies against.\n   :param resources: An optional list of ``resources`` targets containing text\n     file resources to place in this module's jar.\n   :param buildflags: Unused, and will be removed in a future release.\n   :param exclusives: An optional map of exclusives tags. See CheckExclusives for details.\n   "
    JvmTarget.__init__(self, name, sources, dependencies, excludes, exclusives=exclusives)
    self.add_labels('java', 'tests')
    self.resources = list(self.resolve_all(resources, Resources))
