def set_tracking_branch(self, remote_reference):
    "\n\t\tConfigure this branch to track the given remote reference. This will alter\n\t\t\tthis branch's configuration accordingly.\n\t\t\n\t\t:param remote_reference: The remote reference to track or None to untrack \n\t\t\tany references\n\t\t:return: self"
    if ((remote_reference is not None) and (not isinstance(remote_reference, RemoteReference))):
        raise ValueError(('Incorrect parameter type: %r' % remote_reference))
    writer = self.config_writer()
    if (remote_reference is None):
        writer.remove_option(self.k_config_remote)
        writer.remove_option(self.k_config_remote_ref)
        if (len(writer.options()) == 0):
            writer.remove_section()
    else:
        writer.set_value(self.k_config_remote, remote_reference.remote_name)
        writer.set_value(self.k_config_remote_ref, Head.to_full_path(remote_reference.remote_head))
    return self
