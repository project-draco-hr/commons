def test_diff_interface(self):
    assertion_map = dict()
    for (i, commit) in enumerate(self.rorepo.iter_commits('0.1.6', max_count=2)):
        diff_item = commit
        if ((i % 2) == 0):
            diff_item = commit.tree
        for other in (None, commit.Index, commit.parents[0]):
            for paths in (None, 'CHANGES', ('CHANGES', 'lib')):
                for create_patch in range(2):
                    diff_index = diff_item.diff(other, paths, create_patch)
                    assert isinstance(diff_index, DiffIndex)
                    if diff_index:
                        self._assert_diff_format(diff_index)
                        for ct in DiffIndex.change_type:
                            key = ('ct_%s' % ct)
                            assertion_map.setdefault(key, 0)
                            assertion_map[key] = (assertion_map[key] + len(list(diff_index.iter_change_type(ct))))
                        diff_set = set()
                        diff_set.add(diff_index[0])
                        diff_set.add(diff_index[0])
                        assert (len(diff_set) == 1)
                        assert (diff_index[0] == diff_index[0])
                        assert (not (diff_index[0] != diff_index[0]))
    for (key, value) in assertion_map.items():
        assert value, ('Did not find diff for %s' % key)
    c = self.rorepo.head.commit
    cp = c.parents[0]
    diff_index = c.diff(cp, ['does/not/exist'])
    assert (len(diff_index) == 0)
