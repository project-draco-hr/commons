def execute(self, targets):
    buildfile_paths = defaultdict((lambda : defaultdict(list)))
    genmap_trans = self.context.products.get('missing_deps')
    genmap_intrans = self.context.products.get('missing_intransitive_deps')

    def add_buildfile_for_target(target, genmap):
        missing_dep_map = genmap[target]
        missing_deps = (missing_dep_map[self.context._buildroot] if missing_dep_map else defaultdict(list))
        buildfile_paths[target.address.buildfile.full_path][target.name] += missing_deps
    if self.transitive:
        for target in targets:
            add_buildfile_for_target(target, genmap_trans)
            if self.include_intransitive:
                add_buildfile_for_target(target, genmap_intrans)
    else:
        for target in self.context.target_roots:
            add_buildfile_for_target(target, genmap_trans)
            if self.include_intransitive:
                add_buildfile_for_target(target, genmap_intrans)
    for (buildfile_path, missing_dep_map) in buildfile_paths.items():
        self._fix_lint(buildfile_path, missing_dep_map)
