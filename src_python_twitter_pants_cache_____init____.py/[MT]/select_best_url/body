def select_best_url(spec, pinger, log):
    urls = spec.split('|')
    if (len(urls) == 1):
        return urls[0]
    netlocs = map((lambda url: urlparse.urlparse(url)[1]), urls)
    pingtimes = pinger.pings(netlocs)
    log.debug(('Artifact cache server ping times: %s' % ', '.join([('%s: %3f ms' % p) for p in pingtimes])))
    argmin = min(xrange(len(pingtimes)), key=(lambda i: pingtimes[i][1]))
    best_url = urls[argmin]
    if (pingtimes[argmin] == Pinger.UNREACHABLE):
        return None
    log.debug(('Best artifact cache is %s' % best_url))
    return best_url
