@classmethod
def from_binary(cls, binary):
    if (binary not in cls.CACHE):
        cls.sanitize_environment()
        po = subprocess.Popen([binary], stdin=subprocess.PIPE, stdout=subprocess.PIPE)
        (so, _) = po.communicate(ID_PY)
        output = so.decode('utf8').splitlines()
        if (len(output) != 2):
            raise cls.IdentificationError(('Could not establish identity of %s' % binary))
        (id_string, distribute_path) = output
        cls.CACHE[binary] = cls(binary, PythonIdentity.from_id_string(id_string), distribute_path=(distribute_path if (distribute_path != 'None') else None))
    return cls.CACHE[binary]
