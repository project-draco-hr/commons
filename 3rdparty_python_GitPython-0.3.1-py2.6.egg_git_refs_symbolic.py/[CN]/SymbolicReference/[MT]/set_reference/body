def set_reference(self, ref, logmsg=None):
    'Set ourselves to the given ref. It will stay a symbol if the ref is a Reference.\n\t\tOtherwise an Object, given as Object instance or refspec, is assumed and if valid, \n\t\twill be set which effectively detaches the refererence if it was a purely \n\t\tsymbolic one.\n\t\t\n\t\t:param ref: SymbolicReference instance, Object instance or refspec string\n\t\t\tOnly if the ref is a SymbolicRef instance, we will point to it. Everthiny\n\t\t\telse is dereferenced to obtain the actual object.\n\t\t:param logmsg: If set to a string, the message will be used in the reflog.\n\t\t\tOtherwise, a reflog entry is not written for the changed reference.\n\t\t\tThe previous commit of the entry will be the commit we point to now.\n\t\t\t\n\t\t\tSee also: log_append()\n\t\t\n\t\t:return: self\n\t\t:note: This symbolic reference will not be dereferenced. For that, see \n\t\t\t``set_object(...)``'
    write_value = None
    obj = None
    if isinstance(ref, SymbolicReference):
        write_value = ('ref: %s' % ref.path)
    elif isinstance(ref, Object):
        obj = ref
        write_value = ref.hexsha
    elif isinstance(ref, basestring):
        try:
            obj = self.repo.rev_parse((ref + '^{}'))
            write_value = obj.hexsha
        except BadObject:
            raise ValueError(('Could not extract object from %s' % ref))
    else:
        raise ValueError(('Unrecognized Value: %r' % ref))
    if ((obj is not None) and self._points_to_commits_only and (obj.type != Commit.type)):
        raise TypeError(('Require commit, got %r' % obj))
    oldbinsha = None
    if (logmsg is not None):
        try:
            oldbinsha = self.commit.binsha
        except ValueError:
            oldbinsha = Commit.NULL_BIN_SHA
    fpath = self.abspath
    assure_directory_exists(fpath, is_file=True)
    lfd = LockedFD(fpath)
    fd = lfd.open(write=True, stream=True)
    fd.write(write_value)
    lfd.commit()
    if (logmsg is not None):
        self.log_append(oldbinsha, logmsg)
    return self
