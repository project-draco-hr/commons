def rename(self, new_path, force=False):
    'Rename self to a new path\n\t\t\n\t\t:param new_path:\n\t\t\tEither a simple name or a full path, i.e. new_name or features/new_name.\n\t\t\tThe prefix refs/ is implied for references and will be set as needed.\n\t\t\tIn case this is a symbolic ref, there is no implied prefix\n\t\t\t\n\t\t:param force:\n\t\t\tIf True, the rename will succeed even if a head with the target name\n\t\t\talready exists. It will be overwritten in that case\n\t\t\t\n\t\t:return: self\n\t\t:raise OSError: In case a file at path but a different contents already exists '
    new_path = self.to_full_path(new_path)
    if (self.path == new_path):
        return self
    new_abs_path = join(self.repo.git_dir, new_path)
    cur_abs_path = join(self.repo.git_dir, self.path)
    if isfile(new_abs_path):
        if (not force):
            if (open(new_abs_path, 'rb').read().strip() != open(cur_abs_path, 'rb').read().strip()):
                raise OSError(('File at path %r already exists' % new_abs_path))
        os.remove(new_abs_path)
    dname = dirname(new_abs_path)
    if (not isdir(dname)):
        os.makedirs(dname)
    rename(cur_abs_path, new_abs_path)
    self.path = new_path
    return self
