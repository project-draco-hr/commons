@classmethod
def _get_ref_info(cls, repo, ref_path):
    'Return: (sha, target_ref_path) if available, the sha the file at \n\t\trela_path points to, or None. target_ref_path is the reference we \n\t\tpoint to, or None'
    tokens = None
    try:
        fp = open(join(repo.git_dir, ref_path), 'r')
        value = fp.read().rstrip()
        fp.close()
        tokens = value.split(' ')
    except (OSError, IOError):
        for (sha, path) in cls._iter_packed_refs(repo):
            if (path != ref_path):
                continue
            tokens = (sha, path)
            break
    if (tokens is None):
        raise ValueError(('Reference at %r does not exist' % ref_path))
    if (tokens[0] == 'ref:'):
        return (None, tokens[1])
    if repo.re_hexsha_only.match(tokens[0]):
        return (tokens[0], None)
    raise ValueError(('Failed to parse reference information from %r' % ref_path))
