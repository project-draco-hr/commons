def mount_routes(self, class_instance):
    '\n      Mount the routes from another class instance.\n\n      The routes must be added to the class via the HttpServer.route annotation and not directly\n      from the bottle.route decorator.\n    '
    for callback_name in dir(class_instance):
        callback = getattr(class_instance, callback_name)
        if (hasattr(callback, self.ROUTES_ATTRIBUTE) or hasattr(callback, self.ERROR_ATTRIBUTE)):
            self._bind_method(class_instance, callback_name)
            if hasattr(callback, self.VIEW_ATTRIBUTE):
                (args, kw) = getattr(callback, self.VIEW_ATTRIBUTE)
                setattr(self, callback_name, bottle.view(*args, **kw)(getattr(self, callback_name)))
            for (args, kw) in getattr(callback, self.ROUTES_ATTRIBUTE, ()):
                kw = self._apply_plugins(class_instance, copy.deepcopy(kw))
                kw.update(callback=getattr(self, callback_name))
                self._app.route(*args, **kw)
            for error_code in getattr(callback, self.ERROR_ATTRIBUTE, ()):
                self._app.error(error_code)(getattr(self, callback_name))
