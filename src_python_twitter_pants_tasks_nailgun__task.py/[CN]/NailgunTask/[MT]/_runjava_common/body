def _runjava_common(self, runjava, main, classpath=None, opts=None, args=None, jvmargs=None):
    cp = ((self._classpath or []) + (classpath or []))
    if self._daemon:
        nailgun = self._get_nailgun_client()

        def call_nailgun(main_class, *args):
            if self.dry_run:
                print ('********** NailgunClient dry run: %s %s' % (main_class, ' '.join(args)))
                return 0
            else:
                return nailgun(main_class, *args)
        try:
            if cp:
                call_nailgun('ng-cp', *[os.path.relpath(jar, get_buildroot()) for jar in cp])
            opts_args = []
            if opts:
                opts_args.extend(opts)
            if args:
                opts_args.extend(args)
            return call_nailgun(main, *opts_args)
        except NailgunError as e:
            self._ng_shutdown()
            raise e
    else:
        ret = runjava(main=main, classpath=cp, opts=opts, args=args, jvmargs=jvmargs, dryrun=self.dry_run)
        if self.dry_run:
            print ('********** Direct Java dry run: %s' % ret)
            return 0
        else:
            return ret
