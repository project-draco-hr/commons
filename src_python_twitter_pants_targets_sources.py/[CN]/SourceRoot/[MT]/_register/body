@classmethod
def _register(cls, source_root_dir, *allowed_target_types):
    'Registers a source root.\n\n    :source_root_dir The source root directory against which we resolve source paths,\n                     relative to the build root.\n    :allowed_target_types Optional list of target types. If specified, we enforce that\n                          only targets of those types appear under this source root.\n    '
    buildroot = get_buildroot()
    if source_root_dir.startswith(buildroot):
        abspath = os.path.normpath(source_root_dir)
    else:
        abspath = os.path.normpath(os.path.join(buildroot, source_root_dir))
    if (not abspath.startswith(buildroot)):
        raise ValueError(('Source root %s is not under the build root %s' % (abspath, buildroot)))
    types = cls._TYPES_BY_ROOT.get(source_root_dir)
    if (types is None):
        types = OrderedSet()
        cls._TYPES_BY_ROOT[source_root_dir] = types
    for allowed_target_type in allowed_target_types:
        types.add(allowed_target_type)
        roots = cls._ROOTS_BY_TYPE.get(allowed_target_type)
        if (roots is None):
            roots = OrderedSet()
            cls._ROOTS_BY_TYPE[allowed_target_type] = roots
        roots.add(source_root_dir)
