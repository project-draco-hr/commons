def prepare_task(task_type, config=None, args=None, targets=None, **kwargs):
    "Prepares a Task for execution.\n\n  task_type: The class of the Task to create.\n  config: An optional string representing the contents of a pants.ini config.\n  args: optional list of command line flags, these should be prefixed with '--test-'.\n  targets: optional list of Target objects passed on the command line.\n  **kwargs: Any additional args the Task subclass constructor takes beyond the required context.\n\n  Returns a new Task ready to execute.\n  "
    assert issubclass(task_type, Task), ('task_type must be a Task subclass, got %s' % task_type)
    parser = OptionParser()
    option_group = OptionGroup(parser, 'test')
    mkflag = Mkflag('test')
    task_type.setup_parser(option_group, args, mkflag)
    (options, _) = parser.parse_args((args or []))

    def load_config():
        with temporary_file() as ini:
            ini.write((config or ''))
            ini.close()
            return Config.load()
    run_tracker = None
    context = Context(load_config(), options, run_tracker, (targets or []))
    return task_type(context, **kwargs)
