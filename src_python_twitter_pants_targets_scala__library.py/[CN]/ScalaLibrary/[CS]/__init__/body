def __init__(self, name, sources=None, java_sources=None, provides=None, dependencies=None, excludes=None, resources=None, deployjar=False, buildflags=None, exclusives=None):
    "name:      The name of this target, addressable via pants via the portion of the address spec\n                  following the colon.\n    sources:      A list of paths containing the scala source files this scala library is composed\n                  of.\n    java_sources: An optional JavaLibrary target or list of targets containing the java libraries\n                  this library has a circular dependency on.  Prefer using dependencies to express\n                  non-circular dependencies.\n    provides:     An optional Dependency object indicating the The ivy artifact to export\n    dependencies: An optional list of local and remote dependencies of this library.\n    excludes:     An optional list of dependency Exclude objects to filter all of this module's\n                  transitive dependencies against.\n    resources:    An optional list of paths (DEPRECATED) or Resource targets containing resources\n                  that belong on this library's classpath.\n    deployjar:    DEPRECATED - An optional boolean that turns on generation of a monolithic deploy\n                  jar - now ignored.\n    buildflags:   DEPRECATED - A list of additional command line arguments to pass to the underlying\n                  build system for this target - now ignored.\n    exclusives:   An optional list of exclusives tags.\n    "
    ExportableJvmLibrary.__init__(self, name, sources, provides, dependencies, excludes, exclusives=exclusives)
    WithLegacyResources.__init__(self, name, sources=sources, resources=resources)
    self.add_labels('scala')
    self._post_construct(self._link_java_cycles, java_sources)
