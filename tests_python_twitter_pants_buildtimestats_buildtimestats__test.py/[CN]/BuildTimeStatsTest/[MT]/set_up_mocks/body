def set_up_mocks(self, su=None):
    self.mox.StubOutWithMock(dirutil, 'safe_mkdtemp')
    dirutil.safe_mkdtemp().AndReturn('/tmp/test')
    self.mox.StubOutWithMock(log, 'init')
    log.init('/tmp/test/current_run').AndReturn(0)
    self.mox.StubOutWithMock(CommandUtil, 'execute_and_get_output')
    stub = CommandUtil.execute_and_get_output(['git', 'remote', '-v'])
    stub.AndReturn((0, dedent('origin  https://git.twitter.biz/science (fetch)\n    origin  https://git.twitter.biz/science (push)')))
    stub2 = CommandUtil.execute_and_get_output(['git', 'rev-parse', '--abbrev-ref', 'HEAD'])
    stub2.AndReturn((0, 'test_br'))
    self.mox.StubOutWithMock(psutil, 'cpu_percent')
    psutil.cpu_percent(interval=1).AndReturn(1.0)
    self.mox.StubOutWithMock(psutil, 'network_io_counters')
    psutil.network_io_counters().AndReturn('1000,10000,1000')
    self.mox.StubOutWithMock(psutil, 'NUM_CPUS')
    psutil.NUM_CPUS = 5
    self.mox.StubOutWithMock(socket, 'gethostname')
    socket.gethostname().AndReturn('localhost')
    self.mox.StubOutWithMock(socket, 'gethostbyname')
    socket.gethostbyname('localhost').AndReturn('localhost')
    self.mox.StubOutWithMock(sys, 'exit')
    sys.exit(0).AndReturn(0)
    self.mox.ReplayAll()
