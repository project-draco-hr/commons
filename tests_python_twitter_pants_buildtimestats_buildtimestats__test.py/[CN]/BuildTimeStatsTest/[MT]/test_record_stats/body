def test_record_stats(self):
    timings = {'compile': {'checkstyle': [0.0005700588226318359], }, }
    self.set_up_mocks()
    with temporary_file() as temp_fd:
        temp_filename = temp_fd.name
        bs = BuildTimeStats(temp_filename)
        bs.record_stats(timings, 100)
        with open(temp_filename, 'r') as stats_file:
            stats = json.load(temp_fd)
            self.assertTrue(stats.has_key('cpu_time'))
            self.assertTrue(stats.has_key('timings'))
            self.assertTrue(stats.has_key('ip'))
            self.assertTrue(stats.has_key('env'))
            self.assertTrue(stats.has_key('network_counter'))
            self.assertEquals(stats['no_of_cpus'], 5)
            self.assertEquals(stats['git']['push'], 'https://git.twitter.biz/science')
            self.assertEquals(stats['git']['branch'], 'test_br')
    self.mox.VerifyAll()
    exp_calls = [{'/tmp/test/current_run.DEBUG': '/tmp/dummy/buildtime_uploader.global.DEBUG', }, {'/tmp/test/current_run.INFO': '/tmp/dummy/buildtime_uploader.global.INFO', }, {'/tmp/test/current_run.FATAL': '/tmp/dummy/buildtime_uploader.global.FATAL', }, {'/tmp/test/current_run.ERROR': '/tmp/dummy/buildtime_uploader.global.ERROR', }, {'/tmp/test/current_run.WARNING': '/tmp/dummy/buildtime_uploader.global.WARNING', }]
    self.assertEqual(bs.get_log_append_calls(), exp_calls)
