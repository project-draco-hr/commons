def __init__(self, distribution, debug=False):
    self._debug = debug
    self._dist = distribution
    assert isinstance(self._dist, Distribution)
    if ((not hasattr(self._dist, 'egg_info')) and (not self._dist.egg_info)):
        raise Distiller.InvalidDistribution('The distribution is missing its egg-info!')
    if ((not hasattr(self._dist, 'location')) and (not self._dist.location)):
        raise Distiller.InvalidDistribution('The distribution is missing a location!')

    def assert_has_metadata(metadata_txt, message=None):
        if (not self._dist.has_metadata(metadata_txt)):
            raise Distiller.InvalidDistribution((message or ('Missing %s' % metadata_txt)))
    assert_has_metadata('top_level.txt')
    assert_has_metadata('installed-files.txt', 'This distribution was either created with something other than pip, twitter.common.python.installer, or is an already-distilled .egg.')
    self._top_levels = self._get_lines('top_level.txt')
    self._installed_files = [os.path.realpath(os.path.join(self._dist.egg_info, fn)) for fn in self._get_lines('installed-files.txt')]
    self._nspkg = []
    if self._dist.has_metadata('namespace_packages.txt'):
        self._nspkg = self._get_lines('namespace_packages.txt')
