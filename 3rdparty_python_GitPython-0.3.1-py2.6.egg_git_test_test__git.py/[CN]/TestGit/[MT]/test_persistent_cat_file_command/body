def test_persistent_cat_file_command(self):
    import subprocess as sp
    hexsha = 'b2339455342180c7cc1e9bba3e9f181f7baa5167'
    g = self.git.cat_file(batch_check=True, istream=sp.PIPE, as_process=True)
    g.stdin.write('b2339455342180c7cc1e9bba3e9f181f7baa5167\n')
    g.stdin.flush()
    obj_info = g.stdout.readline()
    g = self.git.cat_file(batch=True, istream=sp.PIPE, as_process=True)
    g.stdin.write('b2339455342180c7cc1e9bba3e9f181f7baa5167\n')
    g.stdin.flush()
    obj_info_two = g.stdout.readline()
    assert (obj_info == obj_info_two)
    size = int(obj_info.split()[2])
    data = g.stdout.read(size)
    terminating_newline = g.stdout.read(1)
    g.stdin.write('b2339455342180c7cc1e9bba3e9f181f7baa5167\n')
    g.stdin.flush()
    assert (g.stdout.readline() == obj_info)
    (hexsha, typename, size) = self.git.get_object_header(hexsha)
    (hexsha, typename_two, size_two, data) = self.git.get_object_data(hexsha)
    assert ((typename == typename_two) and (size == size_two))
