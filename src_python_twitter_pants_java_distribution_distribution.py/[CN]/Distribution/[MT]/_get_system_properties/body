def _get_system_properties(self, java):
    if (not self._system_properties):
        with temporary_dir() as classpath:
            with open(os.path.join(classpath, 'SystemProperties.class'), 'w+') as fp:
                fp.write(pkgutil.get_data(__name__, 'SystemProperties.class'))
            cmd = [java, '-cp', classpath, 'SystemProperties']
            process = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            (stdout, stderr) = process.communicate()
            if (process.returncode != 0):
                raise self.Error(('Failed to determine java system properties for %s with %s - exit code %d: %s' % (java, ' '.join(cmd), process.returncode, stderr)))
        props = {}
        for line in stdout.split(os.linesep):
            (key, _, val) = line.partition('=')
            props[key] = val
        self._system_properties = props
    return self._system_properties
