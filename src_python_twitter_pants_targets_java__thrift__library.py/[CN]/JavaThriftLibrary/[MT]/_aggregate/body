@classmethod
def _aggregate(cls, name, provides, buildflags, java_thrift_libs):
    all_sources = []
    all_deps = OrderedSet()
    all_excludes = OrderedSet()
    for java_thrift_lib in java_thrift_libs:
        if java_thrift_lib.sources:
            all_sources.extend(java_thrift_lib.sources)
        if java_thrift_lib.resolved_dependencies:
            all_deps.update((dep for dep in java_thrift_lib.jar_dependencies if (dep.rev is not None)))
        if java_thrift_lib.excludes:
            all_excludes.update(java_thrift_lib.excludes)
    return JavaThriftLibrary(name, all_sources, provides=provides, dependencies=all_deps, excludes=all_excludes, buildflags=buildflags, is_meta=True)
