{
  if (zooKeeper == null) {
    final CountDownLatch connected=new CountDownLatch(1);
    Watcher watcher=new Watcher(){
      @Override public void process(      WatchedEvent event){
switch (event.getType()) {
case None:
switch (event.getState()) {
case Expired:
            LOG.info("Zookeeper session expired. Event: " + event);
          close();
        break;
case SyncConnected:
      connected.countDown();
    break;
}
}
eventQueue.offer(event);
}
}
;
try {
zooKeeper=(sessionState != null) ? new ZooKeeper(zooKeeperServers,sessionTimeoutMs,watcher,sessionState.sessionId,sessionState.sessionPasswd) : new ZooKeeper(zooKeeperServers,sessionTimeoutMs,watcher);
}
 catch (IOException e) {
throw new ZooKeeperConnectionException("Problem connecting to servers: " + zooKeeperServers,e);
}
if (connectionTimeout.getValue() > 0) {
if (!connected.await(connectionTimeout.as(Time.MILLISECONDS),TimeUnit.MILLISECONDS)) {
close();
throw new TimeoutException("Timed out waiting for a ZK connection after " + connectionTimeout);
}
}
 else {
try {
connected.await();
}
 catch (InterruptedException ex) {
LOG.info("Interrupted while waiting to connect to zooKeeper");
close();
throw ex;
}
}
credentials.authenticate(zooKeeper);
sessionState=new SessionState(zooKeeper.getSessionId(),zooKeeper.getSessionPasswd());
}
return zooKeeper;
}
