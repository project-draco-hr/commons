def check_artifact_cache(self, vts):

    def post_process_cached_vts(cached_vts):
        analyses_to_merge = []
        for vt in cached_vts:
            for target in vt.targets:
                analysis_file = JvmCompile._analysis_for_target(self._analysis_tmpdir, target)
                portable_analysis_file = JvmCompile._portable_analysis_for_target(self._analysis_tmpdir, target)
                if os.path.exists(portable_analysis_file):
                    self._analysis_tools.localize(portable_analysis_file, analysis_file)
                if os.path.exists(analysis_file):
                    analyses_to_merge.append(analysis_file)
        if (len(analyses_to_merge) > 0):
            if os.path.exists(self._analysis_file):
                analyses_to_merge.append(self._analysis_file)
            with contextutil.temporary_dir() as tmpdir:
                tmp_analysis = os.path.join(tmpdir, 'analysis')
                self._analysis_tools.merge_from_paths(analyses_to_merge, tmp_analysis)
                shutil.move(tmp_analysis, self._analysis_file)
    self._ensure_analysis_tmpdir()
    return Task.do_check_artifact_cache(self, vts, post_process_cached_vts=post_process_cached_vts)
