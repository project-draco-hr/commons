def _compute_sources_by_target(self, targets):

    def calculate_sources(target):
        sources = filter((lambda s: s.endswith(self._file_suffix)), target.sources_relative_to_buildroot())
        if (hasattr(target, 'java_sources') and target.java_sources):
            sources.extend(resolve_target_sources(target.java_sources, '.java'))
        return sources
    return dict([(t, calculate_sources(t)) for t in targets])
