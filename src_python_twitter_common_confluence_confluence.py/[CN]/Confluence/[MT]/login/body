@staticmethod
def login(confluence_url, user=None, api_entrypoint='confluence2'):
    "Prompts the user to log in to confluence, and returns a Confluence object.\n\n    :param confluence_url: Base url of wiki, e.g. https://confluence.atlassian.com/\n    :param user: Username\n    :param api_entrypoint: 'confluence1' or None results in Confluence 3.x. The default\n                           value is 'confluence2' which results in Confluence 4.x or 5.x\n    :rtype: returns a connected Confluence instance\n\n    raises ConfluenceError if login is unsuccessful.\n    "
    server = ServerProxy((confluence_url + '/rpc/xmlrpc'))
    user = (user or getpass.getuser())
    password = getpass.getpass(('Please enter confluence password for %s: ' % user))
    if (api_entrypoint in (None, 'confluence1')):
        api = server.confluence1
        fmt = 'markdown'
    elif (api_entrypoint == 'confluence2'):
        api = server.confluence2
        fmt = 'xhtml'
    else:
        raise ConfluenceError(("Don't understand api_entrypoint %s" % api_entrypoint))
    try:
        return Confluence(api, confluence_url, api.login(user, password), fmt)
    except XMLRPCError as e:
        raise ConfluenceError(('Failed to log in to %s: %s' % (confluence_url, e)))
