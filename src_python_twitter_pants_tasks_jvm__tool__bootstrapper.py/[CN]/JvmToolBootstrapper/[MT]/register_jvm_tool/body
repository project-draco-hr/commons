def register_jvm_tool(self, key, tools):
    'Register a list of targets against a key.\n\n    We can later use this key to get a callback that will resolve these targets.\n    Note: Not reentrant. We assume that all registration is done in the main thread.\n    '
    self._products.require_data('jvm_build_tools_classpath_callbacks')
    tool_product_map = (self._products.get_data('jvm_build_tools') or {})
    existing = tool_product_map.get(key)
    if (existing is not None):
        if (existing != tools):
            raise TaskError(('Attemping to change tools under %s from %s to %s.' % (key, existing, tools)))
    else:
        tool_product_map[key] = tools
        self._products.set_data('jvm_build_tools', tool_product_map)
