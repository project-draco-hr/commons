def run(self):
    if (self._installed is not None):
        return self._installed
    with TRACER.timed(('Installing %s' % self._install_tmp), V=2):
        command = [self._interpreter.binary, '-']
        command.extend(self._setup_command())
        po = subprocess.Popen(command, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, env=self._interpreter.sanitized_environment(), cwd=self._source_dir)
        (so, se) = po.communicate(self.bootstrap_script.encode('ascii'))
        self._installed = (po.returncode == 0)
    if (not self._installed):
        print(('Failed to install stdout:\n%s' % so.decode('utf-8')), file=sys.stderr)
        print(('Failed to install stderr:\n%s' % se.decode('utf-8')), file=sys.stderr)
        return self._installed
    self._postprocess()
    return self._installed
