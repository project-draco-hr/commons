def __init__(self, org, name, repo, description=None):
    '\n    :param string org: Organization of this artifact, or groupId in maven parlance.\n    :param string name: Name of the artifact, or artifactId in maven parlance.\n    :param repo: :class:`twitter.pants.targets.repository.Repository`\n      this artifact is published to.\n    :param string description: Description of this artifact.\n    '
    if (not isinstance(org, Compatibility.string)):
        raise ValueError(('org must be %s but was %s' % (Compatibility.string, org)))
    if (not isinstance(name, Compatibility.string)):
        raise ValueError(('name must be %s but was %s' % (Compatibility.string, name)))
    if (repo is None):
        raise ValueError('repo must be supplied')
    repos = []
    for tgt in maybe_list(resolve(repo), expected_type=(Pants, Repository)):
        repos.extend(tgt.resolve())
    if (len(repos) != 1):
        raise ValueError(('An artifact must have exactly 1 repo, given: %s' % repos))
    repo = repos[0]
    if ((description is not None) and (not isinstance(description, Compatibility.string))):
        raise ValueError(('description must be None or %s but was %s' % (Compatibility.string, description)))
    self.org = org
    self.name = name
    self.rev = None
    self.repo = repo
    self.description = description
