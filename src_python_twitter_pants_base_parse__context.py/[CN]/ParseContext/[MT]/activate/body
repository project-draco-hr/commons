@classmethod
@contextmanager
def activate(cls, ctx):
    'Activates the given ParseContext.'
    if hasattr(ctx, '_on_context_exit'):
        raise cls.ContextError('Context actions registered outside this parse context arg active')
    try:
        cls._active.append(ctx)
        ctx._on_context_exit = []
        yield
    finally:
        for (func, args, kwargs) in ctx._on_context_exit:
            func(*args, **kwargs)
        del ctx._on_context_exit
        cls._active.pop()
