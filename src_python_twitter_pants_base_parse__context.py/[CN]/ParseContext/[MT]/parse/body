def parse(self, **global_args):
    'The entry point to parsing of a BUILD file.  Changes the working directory to the BUILD file\n    directory and then evaluates the BUILD file with the ROOT_DIR and __file__ globals set in\n    addition to any globals specified as kwargs.  As target methods are parsed they can examine the\n    stack to find these globals and thus locate themselves for the purposes of finding files\n    (see locate() and bind()).'
    from twitter.pants.targets.sources import SourceRoot
    if (self.buildfile not in ParseContext._parsed):
        buildfile_family = tuple(self.buildfile.family())
        pants_context = {}
        for str_to_exec in self._strs_to_exec:
            ast = compile(str_to_exec, '<string>', 'exec')
            Compatibility.exec_function(ast, pants_context)
        with ParseContext.activate(self):
            for buildfile in buildfile_family:
                if (buildfile not in ParseContext._parsed):
                    ParseContext._parsed.add(buildfile)
                    buildfile_dir = os.path.dirname(buildfile.full_path)
                    eval_globals = copy.copy(pants_context)
                    eval_globals.update({'ROOT_DIR': buildfile.root_dir, '__file__': buildfile.full_path, 'globs': Fileset.lazy_rel_globs(buildfile_dir), 'rglobs': Fileset.lazy_rel_rglobs(buildfile_dir), 'source_root': SourceRoot.lazy_rel_source_root(buildfile_dir), })
                    eval_globals.update(global_args)
                    Compatibility.exec_function(buildfile.code(), eval_globals)
