def parse(self, **globalargs):
    'The entry point to parsing of a BUILD file.\n\n    from twitter.pants.targets.sources import SourceRoot\n\n    See locate().\n    '
    if (self.buildfile not in ParseContext._parsed):
        buildfile_family = tuple(self.buildfile.family())
        pants_context = self.default_globals(Config.load())
        with ParseContext.activate(self):
            for buildfile in buildfile_family:
                self._active_buildfile = buildfile
                if (buildfile not in ParseContext._parsed):
                    ParseContext._parsed.add(buildfile)
                    buildfile_dir = os.path.dirname(buildfile.full_path)
                    from twitter.pants.targets.sources import SourceRoot


                    class RelativeSourceRoot(object):

                        @staticmethod
                        def here(*allowed_target_types):
                            'Registers the cwd as a source root for the given target types.'
                            SourceRoot.register(buildfile_dir, *allowed_target_types)

                        def __init__(self, basedir, *allowed_target_types):
                            SourceRoot.register(os.path.join(buildfile_dir, basedir), *allowed_target_types)
                    eval_globals = copy.copy(pants_context)
                    eval_globals.update({'ROOT_DIR': buildfile.root_dir, '__file__': buildfile.full_path, 'globs': partial(Fileset.globs, root=buildfile_dir), 'rglobs': partial(Fileset.rglobs, root=buildfile_dir), 'zglobs': partial(Fileset.zglobs, root=buildfile_dir), 'source_root': RelativeSourceRoot, })
                    eval_globals.update(globalargs)
                    Compatibility.exec_function(buildfile.code(), eval_globals)
