def execute(self, targets):
    pages = []
    for target in targets:
        if isinstance(target, Page):
            wikiconfig = target.wiki_config(self.wiki())
            if wikiconfig:
                pages.append((target, wikiconfig))
    urls = list()
    genmap = self.context.products.get('markdown_html')
    for (page, wikiconfig) in pages:
        html_info = genmap.get((self.wiki(), page))
        if (len(html_info) > 1):
            raise TaskError(('Unexpected resources for %s: %s' % (page, html_info)))
        (basedir, htmls) = html_info.items()[0]
        if (len(htmls) != 1):
            raise TaskError(('Unexpected resources for %s: %s' % (page, htmls)))
        with safe_open(os.path.join(basedir, htmls[0])) as contents:
            url = self.publish_page(page.address, wikiconfig['space'], wikiconfig['title'], contents.read(), parent=wikiconfig.get('parent'))
            if url:
                urls.append(url)
                self.context.log.info(('Published %s to %s' % (page, url)))
    if (self.open and urls):
        binary_utils.open(*urls)
