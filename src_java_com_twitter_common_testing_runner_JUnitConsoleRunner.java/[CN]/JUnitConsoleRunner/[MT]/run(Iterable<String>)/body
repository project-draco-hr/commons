{
  PrintStream out=SWAPPABLE_OUT.getOriginal();
  List<Request> requests=parseRequests(out,tests);
  JUnitCore core=new JUnitCore();
  ForwardingListener forwardingListener=failFast ? new FailFastListener(){
    @Override protected void failFast(    Result failureResult){
      exit(failureResult.getFailureCount());
    }
  }
 : new ForwardingListener();
  core.addListener(forwardingListener);
  if (xmlReport || suppressOutput) {
    if (!outdir.exists()) {
      if (!outdir.mkdirs()) {
        throw new IllegalStateException("Failed to create output directory: " + outdir);
      }
    }
    StreamCapturingListener streamCapturingListener=new StreamCapturingListener(outdir);
    forwardingListener.addListener(streamCapturingListener);
    if (xmlReport) {
      AntJunitXmlReportListener xmlReportListener=new AntJunitXmlReportListener(outdir,streamCapturingListener);
      forwardingListener.addListener(xmlReportListener);
    }
  }
  forwardingListener.addListener(new ConsoleListener(out));
  int failures=0;
  for (  Request request : requests) {
    Result result=core.run(request);
    failures+=result.getFailureCount();
  }
  exit(failures);
}
