{
  ServerSetImpl client=createServerSet();
  client.monitor(serverSetMonitor);
  assertChangeFiredEmpty();
  Map<String,InetSocketAddress> server1Ports=makePortMap("http-admin1",8080);
  Map<String,InetSocketAddress> server2Ports=makePortMap("http-admin2",8081);
  Map<String,InetSocketAddress> server3Ports=makePortMap("http-admin3",8082);
  ServerSetImpl server1=createServerSet();
  ServerSetImpl server2=createServerSet();
  ServerSetImpl server3=createServerSet();
  ServiceInstance instance1=new ServiceInstance(new Endpoint("foo",1000),ImmutableMap.of("http-admin1",new Endpoint("foo",8080)),Status.ALIVE);
  ServiceInstance instance2=new ServiceInstance(new Endpoint("foo",1001),ImmutableMap.of("http-admin2",new Endpoint("foo",8081)),Status.ALIVE);
  ServiceInstance instance3=new ServiceInstance(new Endpoint("foo",1002),ImmutableMap.of("http-admin3",new Endpoint("foo",8082)),Status.ALIVE);
  EndpointStatus status1=server1.join(InetSocketAddress.createUnresolved("foo",1000),server1Ports,Status.ALIVE);
  assertEquals(ImmutableList.of(instance1),ImmutableList.copyOf(serverSetBuffer.take()));
  EndpointStatus status2=server2.join(InetSocketAddress.createUnresolved("foo",1001),server2Ports,Status.ALIVE);
  assertEquals(ImmutableList.of(instance1,instance2),ImmutableList.copyOf(serverSetBuffer.take()));
  EndpointStatus status3=server3.join(InetSocketAddress.createUnresolved("foo",1002),server3Ports,Status.ALIVE);
  assertEquals(ImmutableList.of(instance1,instance2,instance3),ImmutableList.copyOf(serverSetBuffer.take()));
  status2.update(Status.DEAD);
  assertEquals(ImmutableList.of(instance1,instance3),ImmutableList.copyOf(serverSetBuffer.take()));
}
