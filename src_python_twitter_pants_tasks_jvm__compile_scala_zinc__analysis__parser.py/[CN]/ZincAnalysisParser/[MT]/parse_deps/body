def parse_deps(self, infile, classpath_indexer):
    self._verify_version(infile)
    bin_deps = self._find_repeated_at_header(infile, 'binary dependencies')
    src_deps = self._find_repeated_at_header(infile, 'direct source dependencies')
    ext_deps = self._find_repeated_at_header(infile, 'direct external dependencies')
    scalalib_re = re.compile('scala-library-\\d+\\.\\d+\\.\\d+\\.jar$')
    filtered_ext_deps = defaultdict(list)
    for (src, deps) in ext_deps.iteritems():
        filtered_ext_deps[src] = filter((lambda x: (scalalib_re.search(x) is None)), deps)
    ret = defaultdict(list)
    for d in [bin_deps, src_deps, filtered_ext_deps]:
        ret.update(d)
    return ret
