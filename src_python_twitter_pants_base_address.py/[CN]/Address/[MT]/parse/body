@classmethod
def parse(cls, root_dir, spec, is_relative=True):
    "Parses the given spec into an Address.\n\n    An address spec can be one of:\n    1.) the (relative) path of a BUILD file\n    2.) the (relative) path of a directory containing a BUILD file child\n    3.) either of 1 or 2 with a ':[target name]' suffix\n    4.) a bare ':[target name]' indicating the BUILD file to use is the one in the current directory\n\n    If the spec does not have a target name suffix the target name is taken to be the same name\n    as the BUILD file's parent directory.  In this way the containing directory name\n    becomes the 'default' target name for a BUILD file.\n\n    If there is no BUILD file at the path pointed to, or if there is but the specified target name\n    is not defined in the BUILD file, an IOError is raised.\n    "
    if spec.startswith(':'):
        spec = ('.' + spec)
    parts = spec.split(':', 1)
    path = parts[0]
    if is_relative:
        path = os.path.relpath(os.path.abspath(path), root_dir)
    buildfile = BuildFile(root_dir, path)
    name = (os.path.basename(os.path.dirname(buildfile.relpath)) if (len(parts) == 1) else parts[1])
    return Address(buildfile, name)
