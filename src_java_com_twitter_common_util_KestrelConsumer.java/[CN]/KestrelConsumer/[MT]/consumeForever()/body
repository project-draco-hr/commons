{
  Preconditions.checkNotNull(queue);
  log.info("Consuming items from the kestrel queue forever.");
  while (true) {
    Object task=null;
    while (task == null) {
      try {
        Thread.sleep(backoffDelayMs);
      }
 catch (      InterruptedException e) {
        log.log(Level.INFO,"Interrupted while sleeping.",e);
      }
      task=queue.get(queueName);
      if (task == null) {
        backoffDelayMs=Math.min(backoffDelayMs * 2,MAX_BACKOFF_DELAY_MS);
        log.info("No work, backing off for " + backoffDelayMs + " ms.");
      }
 else {
        stats.incrementAndGet();
        backoffDelayMs=MIN_DELAY_MS;
      }
    }
    if (task instanceof String) {
      taskHandler.apply((String)task);
    }
 else {
      log.severe("Unexpected task " + task + " of type "+ task.getClass().getName());
    }
  }
}
