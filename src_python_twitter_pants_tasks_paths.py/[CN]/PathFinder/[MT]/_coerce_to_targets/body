@classmethod
def _coerce_to_targets(cls, from_str, to_str):
    if isinstance(from_str, Compatibility.string):
        if (not isinstance(to_str, Compatibility.string)):
            raise TaskError(('Finding paths from string %s to non-string %s' % (from_str, str(to_str))))
        from_address = Address.parse(get_buildroot(), from_str)
        to_address = Address.parse(get_buildroot(), to_str)
        from_target = Target.get(from_address)
        to_target = Target.get(to_address)
        if (not from_target):
            raise TaskError(("Target %s doesn't exist" % from_address.reference()))
        if (not to_target):
            raise TaskError(("Target %s doesn't exist" % to_address.reference()))
        return (from_target, to_target)
    elif isinstance(to_str, Compatibility.string):
        raise TaskError(('Finding paths from string %s to non-string %s' % (to_str, str(from_str))))
    return (from_str, to_str)
