def _run_thrift(self, source, bases):
    thrift_file = source
    thrift_abs_path = os.path.join(self.root, thrift_file)
    thrift_abs_path = os.path.abspath(thrift_abs_path)
    args = [select_thrift_binary(self.config), '--gen', 'py:new_style', '-recurse', '-o', self.codegen_root]
    for base in bases:
        args.extend(('-I', base))
    args.append(thrift_abs_path)
    cwd = os.getcwd()
    os.chdir(self.chroot.path())
    try:
        po = subprocess.Popen(args)
    finally:
        os.chdir(cwd)
    rv = po.wait()
    if (rv != 0):
        comm = po.communicate()
        print('thrift generation failed!', file=sys.stderr)
        print('STDOUT', file=sys.stderr)
        print(comm[0], file=sys.stderr)
        print('STDERR', file=sys.stderr)
        print(comm[1], file=sys.stderr)
    return (rv == 0)
