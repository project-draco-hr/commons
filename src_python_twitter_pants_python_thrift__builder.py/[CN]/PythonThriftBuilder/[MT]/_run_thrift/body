def _run_thrift(self, source):
    thrift_file = source
    thrift_abs_path = os.path.join(self.root, self.target.target_base, thrift_file)
    thrift_abs_path = os.path.abspath(thrift_abs_path)
    cwd = os.getcwd()
    os.chdir(self.chroot.path())
    po = subprocess.Popen([PythonThriftBuilder.thrift_binary(self.root), '--gen', 'py:new_style', '-o', self.codegen_root, thrift_abs_path])
    os.chdir(cwd)
    rv = po.wait()
    if (rv != 0):
        comm = po.communicate()
        print  >> sys.stderr, 'thrift generation failed!'
        print  >> sys.stderr, 'STDOUT'
        print  >> sys.stderr, comm[0]
        print  >> sys.stderr, 'STDERR'
        print  >> sys.stderr, comm[1]
    return (rv == 0)
