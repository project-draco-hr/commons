@contextmanager
def timed(self, goal):
    "Records the time taken to execute the yielded block an records this timing against the given\n    goal's total runtime.\n    "
    if (self._elapsed is not None):
        raise ValueError('This timer is already finished.')
    start = self._now()
    try:
        yield
    finally:
        self._record(goal, (self._now() - start))
