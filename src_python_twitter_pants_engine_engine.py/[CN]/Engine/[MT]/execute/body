def execute(self, context, phases):
    'Executes the supplied phases and their dependencies against the given context.\n\n    :param context: The pants run context.\n    :param list phases: A list of ``Phase`` objects representing the command line goals explicitly\n                        requested.\n    :returns int: An exit code of 0 upon success and non-zero otherwise.\n    '
    with Timer.begin() as timer:
        try:
            try:
                self.attempt(timer, context, phases)
                return 0
            except (TaskError, GoalError) as e:
                message = ('%s' % e)
                if message:
                    print(('\nFAILURE: %s\n' % e))
                else:
                    print('\nFAILURE\n')
                return (e.exit_code if isinstance(e, TaskError) else 1)
        finally:
            timer.finish()
            if self._print_timing:
                print(timer.render_timing_report())
