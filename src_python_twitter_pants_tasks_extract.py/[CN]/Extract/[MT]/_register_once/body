@classmethod
def _register_once(cls, name, id_, compiler, language, rpc_style, namespace_map, basedir, create):
    'Create and register a ``JavaThriftLibrary`` representing a ``ThriftLibrary``\n    and its thrift codegen options.\n\n    :returns: The :class:`twitter.pants.targets.java_thrift_library.JavaThriftLibrary`\n      representing the requested thrift codegen.\n    '
    request = cls.Request.create(id_, compiler, language, rpc_style, namespace_map)
    if (request not in cls._PLACEHOLDER_BY_REQUEST):
        with ParseContext.temp(basedir):
            unique_name = '-'.join((val for val in request._replace(target_id=name) if (val is not None)))
            placeholder = create(unique_name)
            assert isinstance(placeholder, JavaThriftLibrary)
        cls._PLACEHOLDER_BY_REQUEST[request] = placeholder
    return cls._PLACEHOLDER_BY_REQUEST[request]
