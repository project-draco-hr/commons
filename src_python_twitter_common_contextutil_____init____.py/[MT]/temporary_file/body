@contextmanager
def temporary_file(root_dir=None, cleanup=True):
    "\n    A with-context that creates a temporary file and returns a writeable file descriptor to it.\n\n    You may specify the following keyword args:\n\n    :param str root_dir: The parent directory to create the temporary file.\n    :param bool cleanup: Whether or not to clean up the temporary file.\n\n    >>> with temporary_file() as fp:\n    ...  fp.write('woot')\n    ...  fp.sync()\n    ...  # pass fp on to something else\n\n  "
    with tempfile.NamedTemporaryFile(dir=root_dir, delete=False) as fd:
        try:
            yield fd
        finally:
            if cleanup:
                safe_delete(fd.name)
