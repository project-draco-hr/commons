{
  String parentPath="/twitter/path";
  final String node="node";
  String nodePath=parentPath + "/" + node;
  String data="DaTa";
  ZooKeeperUtils.ensurePath(zkClient,ACL,parentPath);
  zkClient.get().create(nodePath,data.getBytes(),ACL,CreateMode.PERSISTENT);
  final Map<String,String> zkMap=ZooKeeperMap.create(zkClient,parentPath,BYTES_TO_STRING);
  checkUnsupported(new Command(){
    @Override public void execute(){
      zkMap.clear();
    }
  }
);
  checkUnsupported(new Command(){
    @Override public void execute(){
      zkMap.remove(node);
    }
  }
);
  checkUnsupported(new Command(){
    @Override public void execute(){
      zkMap.put("othernode","othervalue");
    }
  }
);
  checkUnsupported(new Command(){
    @Override public void execute(){
      zkMap.putAll(ImmutableMap.of("othernode","othervalue"));
    }
  }
);
  checkUnsupported(new Command(){
    @Override public void execute(){
      zkMap.keySet().iterator().remove();
    }
  }
);
  checkUnsupported(new Command(){
    @Override public void execute(){
      zkMap.values().iterator().remove();
    }
  }
);
  checkUnsupported(new Command(){
    @Override public void execute(){
      zkMap.entrySet().iterator().remove();
    }
  }
);
  assertEquals(1,zkMap.size());
  assertEquals(data,zkMap.get(node));
}
