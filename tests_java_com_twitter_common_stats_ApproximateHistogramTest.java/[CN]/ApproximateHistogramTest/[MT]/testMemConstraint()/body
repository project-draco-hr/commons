{
  ImmutableList.Builder<Amount<Long,Data>> builder=ImmutableList.builder();
  builder.add(Amount.of(1L,Data.KB));
  builder.add(Amount.of(4L,Data.KB));
  builder.add(Amount.of(8L,Data.KB));
  builder.add(Amount.of(16L,Data.KB));
  builder.add(Amount.of(32L,Data.KB));
  builder.add(Amount.of(64L,Data.KB));
  builder.add(Amount.of(256L,Data.KB));
  builder.add(Amount.of(1L,Data.MB));
  builder.add(Amount.of(16L,Data.MB));
  builder.add(Amount.of(32L,Data.MB));
  List<Amount<Long,Data>> sizes=builder.build();
  for (  Amount<Long,Data> maxSize : sizes) {
    ApproximateHistogram hist=new ApproximateHistogram(maxSize);
    for (long i=0; i < 1000 * 1000; i++) {
      hist.add(i);
    }
    long size=ObjectSizeCalculator.getObjectSize(hist);
    assertTrue(size < maxSize.as(Data.BYTES));
  }
}
